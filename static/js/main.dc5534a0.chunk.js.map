{"version":3,"sources":["reportWebVitals.ts","util/util.ts","view/SideBar.tsx","view/Contents.tsx","model/Api.ts","model/const.ts","model/enum.ts","model/table.ts","view/print/header.tsx","view/print/BackView.tsx","view/print/KinderPrintView.tsx","view/print/FrontPrintViewUtils.tsx","view/print/PrintView.tsx","App.tsx","util/api_utils.ts","Root.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nowAsNextWeek","date","Date","setDate","getDate","console","log","call","nowYear","getFullYear","getYears","list","first","setFullYear","compareYear","push","setNotFoundMessage","year","month","week","mainInfo","reduce","pre","cur","MonthList","monthProps","onClick","e","id","currentTarget","stateHandler","index","getMonth","thisYear","map","to","gitRoot","className","SideBar","yearsProps","useState","selectedYear","setYear","handleClick","event","target","Number","parseInt","years","toString","ContentsWrapper","contentsProps","yearMonth","notFound","contentsList","content","handleContentDto","front_hanja_list","questions","yojeol","back_hanja_list","main_words","yaer","voca_list","ContentView","contentsDto","frontList","front","hanja","name","value","q","a","morning","words","where","child_afternoon","youth_afternoon","adult","Index","Error","RegExp","Room","banList","weeklyList","getStartDate","d","setMonth","setHours","getDiffWeek","targetDate","startDate","raw","getTime","weeks","Math","ceil","FrontHeaderTable","no","weekly","ban","dateString","this","BackHeaderView","back","main_word","HeaderView","header","toAdultText","text","cnt","str","jsxList","error","endIndex","indexOf","startIndex","len","ch","substring","length","chCnt","split","val","idx","BackView","backContents","qCnt","QuestionsView","Adult","replaceAll","BottomHanjasView","findIndex","v","i","filter","Child","el","trim","regex","jsx","isKr","undefined","match","YouthYojeolView","ChildYojeolView","AdultYojeolView","answer","YouthBackBottomView","ChildBackBottomView","AdultBackBottomView","order","Youth","KinderHeaderView","kinderPrintDto","KinderPrintView","row","yojeolCnt","yojeolLineCnt","lineDiff","round","arr2D","Array","followCnt","isInsertLine","followInserLine","j","dataString","isFront","tr","frontWriteTable","age","rowCnt","swapHanjaList","rowArr","frontWriteView","firstVocaLen","childWordWriteView","vocaArr","isSpecialCase","voca","makeNextLineBracket","PrintView","contentDto","initDay","getDay","getUTCFullYear","getUTCMonth","getUTCDate","leftDate","nextOffsetOfSundayFromInitDay","diffWeek","numList","KINDERGARTEN","ELEMENTARY","TEENAGER","ADULT","headerList","firstDate","interpolation","floor","getWeekly","headerViews","frontTable","WordViews","vocaCnt","mean","hanjaList","getBoolArr","boolArr","totalVocaLen","secondVocaLen","getEachHanjaIndexArr","hasHanja","temp","getNewHanjaList","strokeView","_","drawCnt","draw_list","realCnt","count","sub","src","nineList","swap","ageIndexList","Kinder","initMonthYear","App","linkState","view","useEffect","updateUrlPath","link","pathname","url_path","updateContentsDto","updateNotFound","printViewContentsDto","setPrintViewContentDto","tempPrintViewContentsDto","setTempPrintViewContentDto","updateTempYearMonth","window","location","includes","monthFiles","updateMonthFiles","axios","method","baseURL","url","res","data","catch","getYearsJson","yaerJson","month_files","monthIndex","path","getMonthsJson","String","contentsDtos","err","dto","React","createElement","Root","history","useHistory","setLinkState","listen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc5534a0.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {  getStartDate } from '../model/const';\r\nimport { Room } from '../model/enum';\r\nimport { FrontHeaderTable } from '../model/table';\r\n\r\n\r\ntype FrontHeader = {\r\n  ban: string\r\n  date: string\r\n  num: number\r\n}\r\nexport const frontHeader = (year: number, month: number, week: number): FrontHeader[] => {\r\n\r\n  return [{ ban: \"\", date: \"\", num: 1 }] ;\r\n}\r\n// export function getFrontHeaderTableList(\r\n// ): Array<FrontHeaderTable> {\r\n//   let list: Array<FrontHeaderTable> = [];\r\n\r\n//   getNextSundayAndWeekOrder((nextSunday: Date, weekly: number) => {\r\n//     roomList.forEach((room, ban) => {\r\n//       const header = new FrontHeaderTable(\r\n//         getNextNo(room),\r\n//         room,\r\n//         nextSunday,\r\n//         weekly,\r\n//         ban\r\n//       );\r\n//       list.push(header);\r\n//     });\r\n//   });\r\n//   return list;\r\n// }\r\n\r\nexport function getDefaultDate(): Date {\r\n  let date = new Date();\r\n  date.setFullYear(2021);\r\n  date.setMonth(6);\r\n  date.setDate(4);\r\n  date.setHours(0);\r\n  return date;\r\n}\r\n// export function getNextNo(room: Room) {\r\n//   let date1 = new Date();\r\n//   let date2 = getDefaultDate();\r\n//   date1.setHours(0);\r\n\r\n//   var weeks = Math.floor(\r\n//     (date2.getTime() - date1.getTime()) / (1000 * 3600 * 24 * 7)\r\n//   );\r\n//   console.log(\"week:\",weeks);\r\n//   return room + weeks;\r\n// }\r\nexport function getNextSundayAndWeekOrder(\r\n  callback: (nextSunday: Date, order: number) => void\r\n) {\r\n  let now = new Date();\r\n  let first = new Date();\r\n  var order = 0;\r\n  first.setDate(1);\r\n  while (true) {\r\n    let day = first.getDay();\r\n    if (day == 0) {\r\n      console.log(first);\r\n      order++;\r\n      break;\r\n    } else {\r\n      first.setDate(first.getDate() + 1);\r\n    }\r\n  }\r\n  while (true) {\r\n    if (now.getDate() - first.getDate() > 7) {\r\n      first.setDate(first.getDate() + 7);\r\n      order++;\r\n    } else {\r\n      first.setDate(first.getDate() + 7);\r\n      order++;\r\n      console.log(first, ' order:', order);\r\n      break;\r\n    }\r\n  }\r\n  callback(first, order);\r\n}\r\n\r\nexport const nowAsNextWeek: Date = (() => {\r\n  var date = new Date();\r\n  // date.setDate(0)\r\n  date.setDate(date.getDate() + 7);\r\n  console.log(\"date\",date);\r\n  return date;\r\n}).call(this);\r\n\r\nexport const nowYear = nowAsNextWeek.getFullYear();\r\nconsole.log(\"now year\", nowYear);\r\n\r\nexport function getYears(): Array<Number> {\r\n  let list: Array<Number> = [];\r\n  let first = new Date();\r\n  first.setFullYear(2021);\r\n  while (true) {\r\n    const compareYear = first.getFullYear();\r\n    if (compareYear <= nowYear) {\r\n      list.push(compareYear);\r\n      first.setFullYear(compareYear + 1);\r\n    } else break;\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getMonth(year: Number): Array<Number> {\r\n  const list = [];\r\n  if (year < nowYear) {\r\n    for (let index = 0; index < 12; index++) {\r\n      list[index] = index + 1;\r\n    }\r\n  } else {\r\n    for (let index = 0; index < nowAsNextWeek.getMonth() + 1; index++) {\r\n      list[index] = index + 1;\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function setNotFoundMessage(year: string, month: string, week: string): string {\r\n  var endMessage = \"정보가 없습니다.\"\r\n  var mainInfo: string[] = [];\r\n  if (year) mainInfo.push(`${year}년 `);\r\n  if (month) mainInfo.push(`${month}월 `);\r\n  if (week) mainInfo.push(`${week}주차 `);\r\n  return mainInfo.reduce((pre, cur) => (\r\n    pre + cur\r\n  )) + endMessage;\r\n}","import React, { Component, MouseEventHandler, ReactElement, ReactHTML, ReactHTMLElement, ReactNode, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Router } from \"react-router-dom\";\nimport { gitRoot } from \"../App\";\nimport { getMonth, getYears, nowYear } from \"../util/util\";\nimport \"../view/SideBar.css\";\nimport ContentsContainer from \"./Contents\";\n\ntype YearsProps = {\n  years: Array<Number>;\n  stateHandler: (path: string) => void;\n};\n\ntype MonthProps = {\n  thisYear: Number;\n  stateHandler: (path: string) => void;\n}\nconst MonthList = (monthProps: MonthProps) => {\n  console.log(\"month list\", monthProps);\n  const list: Array<JSX.Element> = []\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\n    const id = e.currentTarget.id\n    monthProps.stateHandler(id)\n  }\n  getMonth(monthProps.thisYear).map((month) => {\n    list.push(\n      <Link to={`/${gitRoot}/${monthProps.thisYear}/${month}`}  >\n        <p className=\"sideBar-month\" id={`/${gitRoot}/${monthProps.thisYear}/${month}`} onClick={onClick}>\n          {month}\n        </p>\n      </Link>\n    )\n  })\n  return (\n    <BrowserRouter>\n      {list}\n    </BrowserRouter>\n  );\n}\nconst SideBar = (yearsProps: YearsProps) => {\n\n  const [selectedYear, setYear] = useState<Number>(nowYear);\n  console.log(\"sideBar:\", selectedYear);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    const thisElement = (event.target as HTMLElement);\n    const year = thisElement.id;\n    setYear(Number.parseInt(year));\n  }\n\n  return (\n\n    <div className=\"sideBar\">\n      {\n        yearsProps.years.map((year) => {\n          return (\n            <span>\n              <p className=\"sideBar-year\" id={year.toString()} onClick={handleClick}> {year}</p>\n              <div className=\"sideBar-month\">\n                {year == selectedYear && <MonthList thisYear={year} stateHandler={yearsProps.stateHandler} />}\n              </div>\n            </span>\n          );\n        })\n      }\n    </div>);\n}\n\n\n\nexport default SideBar;\n","import \"./Contents.css\"\nimport axios, { AxiosResponse } from 'axios'\nimport React, { DOMElement, ReactNode, useEffect, useState } from \"react\"\nimport { ContentsDto, YearJson } from \"../model/Api\"\nimport { FrontHanjaList } from \"../model/table\"\n\nimport { error } from \"console\"\nimport { throws } from \"assert\"\nimport { BrowserRouter, Link } from \"react-router-dom\"\nimport { GenModal } from \"./Generator\"\nimport { gitRoot } from \"../App\"\ntype ContentsProps = {\n    contentsList: ContentsDto[] | null;\n    yearMonth: string;\n    handleContentDto: (contentDto: ContentsDto) => void;\n    notFound: string | null;\n    year: string;\n    month: string;\n    week: string;\n}\nfunction getPath(yearMonth: string): string {\n    const pathLilst = yearMonth.split(\"/\").filter((value) => value != \"\")\n    const year = pathLilst[0].substring(2);\n    var month: string | number = Number.parseInt(pathLilst[1]);\n    if (month < 10) {\n        month = \"0\" + month;\n    } else month = month.toString();\n    //2020/04 -> 2004\n    return year + month\n}\nconst defaultString = \"999999\"\n\nexport const ContentsWrapper = (contentsProps: ContentsProps) => {\n    console.log('git', contentsProps.yearMonth);\n    if (contentsProps.notFound || !contentsProps.contentsList) {\n        return (\n            <div className=\"contents\" >\n                <div className=\"error\">\n                    {contentsProps.notFound}\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"contents\">\n                <div className=\"hanja\" id=\"main_title\">\n                 \n                    {contentsProps.year}년 {contentsProps.month}월\n                </div>\n                {\n                    contentsProps.contentsList!.map((content, index) => (\n                        <div>\n                             {\n                                // 리액트 링크(URL) 훅 만들기\n                                <BrowserRouter>\n                                    <Link className=\"print-link\" to={`/${gitRoot}/${contentsProps.year}/${contentsProps.month}/${content.week}`}>\n                                        \n                                        <button className=\"print-button\" onClick={() => contentsProps.handleContentDto.call(this, content)}>{`${content.week}주차 프린트 화면`}</button>\n                                    </Link>\n                                </BrowserRouter>\n                            }\n                            <ContentView\n                                front_hanja_list={content.front_hanja_list}\n                                questions={content.questions}\n                                yojeol={content.yojeol}\n                                back_hanja_list={content.back_hanja_list}\n                                week={content.week} main_words={content.main_words}\n                                handleContentDto={contentsProps.handleContentDto}\n                                month={parseInt(contentsProps.month)}\n                                yaer={parseInt(contentsProps.year)} voca_list={content.voca_list} />\n                           \n                        </div>\n                    ))\n                }\n                <br /><br />\n            </div>\n        );\n    }\n}\n\nconst ContentView = (contentsDto: ContentsDto) => {\n    const frontList = (\n        <div className=\"front_container\">\n            {contentsDto.front_hanja_list.map((front) =>\n                <div className=\"front\">\n                    <div className=\"front_hanja\">{front.hanja}</div>\n                    <div>{front.name}</div>\n                    {/* {\"획순:\" + front.count},<span >{front.draw_list}</span> */}\n                </div>\n            )}\n        </div>\n    );\n    const questions = (\n        <div className=\"questions\">\n            <br /> <span>-문답-</span><br />\n            {\n                contentsDto.questions.map((value, index) => (\n                    <div>\n                        <span>{index + 1}. {value.q}</span> <br />\n                        <span> - {value.a}</span>\n                    </div>\n                ))\n            }\n        </div>\n    );\n    const backHanjaList = (\n        <div><br />\n            {\n                contentsDto.back_hanja_list.map((value) => (\n                    <span className=\"back_hanja\">{value} </span>\n                ))\n            }\n        </div>\n    );\n    const yojeol = (\n        <div className=\"yojeol-container\">\n            <br /><div>-요절-</div>\n            <br /> 다음주 오전요절 <div className=\"y_word\">- {contentsDto.yojeol.morning.words}<span className=\"y_where\">({contentsDto.yojeol.morning.where}) </span></div>\n            <br /> 유년반 오후요절 <div className=\"y_word\">- {contentsDto.yojeol.child_afternoon.words}<span className=\"y_where\"> ({contentsDto.yojeol.child_afternoon.where}) </span></div>\n            <br /> 중등반 오후요절 <div className=\"y_word\">- {contentsDto.yojeol.youth_afternoon.words}<span className=\"y_where\"> ({contentsDto.yojeol.youth_afternoon.where})</span></div>\n            <br /> 장년반 요절     <div className=\"y_word\">- {contentsDto.yojeol.adult.words}<span className=\"y_where\"> ({contentsDto.yojeol.adult.where})</span></div>\n        </div>\n    );\n    // console.log(frontList);\n\n    return (\n        <div className=\"hanja\">\n            <br />\n            <div id=\"week\"># {contentsDto.week}주차 ({contentsDto.main_words})</div><br />\n            {frontList}\n            {questions}\n            {yojeol}\n\n        </div>\n    )\n}\nexport default ContentsWrapper","\nexport interface FrontHanjaList {\n    hanja: string;\n    name: string;\n    count: string;\n    draw_list: string[];\n    sub: string;\n}\n\nexport interface Question {\n    q: string;\n    a: string;\n}\n\nexport interface Morning {\n    words: string;\n    where: string;\n}\n\nexport interface ChildAfternoon {\n    words: string;\n    where: string;\n}\n\nexport interface YouthAfternoon {\n    words: string;\n    where: string;\n}\n\nexport interface Adult {\n    words: string;\n    where: string;\n    answer: string\n}\n\nexport interface Yojeol {\n    morning: Morning;\n    child_afternoon: ChildAfternoon;\n    youth_afternoon: YouthAfternoon;\n    adult: Adult;\n}\n\nexport interface ContentsDto {\n    voca_list: Voca[];\n    front_hanja_list: FrontHanjaList[];\n    main_words: string;\n    questions: Question[];\n    yojeol: Yojeol;\n    back_hanja_list: string[];\n    week: number;\n    month: number;\n    yaer: number;\n    handleContentDto: (contentsDto: ContentsDto) => void;\n}\nexport interface BackContents {\n    main_words: string;\n    questions: Question[];\n    yojeol: Yojeol;\n    //0: where, \n    back_hanja_list: string[];\n    week: number;\n    month: number;\n    yaer: number;\n    index: Index;\n    order: number\n}\nexport enum Index{\n    Kinder = 0,Child,Youth,Adult\n}\nexport interface Voca {\n    hanja: string;\n    mean: string;\n}\n\nexport class HTTPError extends Error {\n    statusCode: number\n    constructor(statusCode: number, message?: string) {\n        super(message) // 반드시 호출해야함\n        this.name = `HTTPError`\n        this.statusCode = statusCode\n    }\n}\n\nexport interface YearJson {\n    month_files: string[]\n}","import { Room } from \"./enum\";\r\nexport const bracketRegex = new RegExp(/[(](.*?)[)]/, 'g');\r\n// export const roomList:{index:number}[] = new Map()\r\n// roomList.set(\"유치반\",Room.KINDERGARTEN);\r\n// roomList.set(\"유년\",Room.ELEMENTARY);\r\n// roomList.set(\"중등\",Room.TEENAGER);\r\n// roomList.set(\"장년\",Room.ADULT);\r\nexport const banList = [\r\n    \"유치반\",\r\n    \"유년\",\r\n    \"중등\",\r\n    \"장년\"\r\n]\r\nexport const weeklyList = [\"첫째 주일\", \"둘째 주일\", \"셋째 주일\", \"넷째 주일\", \"다섯째 주일\"];\r\n\r\n\r\nexport const startYear = 2021;\r\n// month start zero\r\nexport const startMonth = 6;\r\nexport const startDate = 4;\r\n\r\nexport const getStartDate = (): Date => {\r\n    const d = new Date();\r\n    d.setFullYear(startYear)\r\n    d.setMonth(startMonth)\r\n    d.setDate(startDate)\r\n    d.setHours(0)\r\n    return d;\r\n}\r\nexport const getWeekly = (targetDate: Date): number => {\r\n    const firstDate = new Date();\r\n    // firstDate.setHours(0, 0, 0, 0)\r\n    firstDate.setFullYear(targetDate.getFullYear())\r\n    firstDate.setMonth(targetDate.getMonth(), 1)\r\n    console.log(\"firstData:\" + firstDate);\r\n    console.log(\"targDate:\" + targetDate);\r\n    // if (firstDate.getDate() == targetDate.getDate() &&\r\n    //     firstDate.getMonth() && targetDate.getMonth() &&\r\n    //     firstDate.getFullYear() == targetDate.getFullYear() &&\r\n    //     firstDate.getDay() == targetDate.getDay()) {\r\n    //     return 0;\r\n    // }\r\n    var interpolation = 0\r\n    if(firstDate.getDay() == 0){\r\n        console.log(\">>>>>\");\r\n        interpolation += 1\r\n        \r\n    }\r\n\r\n\r\n\r\n    // firstDate.setDate(1)\r\n\r\n    var weeks = Math.floor(\r\n        (targetDate.getTime() - firstDate.getTime()) / (1000 * 3600 * 24 * 7)\r\n    ) + interpolation;\r\n    console.log(\"weeks:\", weeks);\r\n\r\n    return weeks;\r\n}\r\nexport const getDate = (year: number, month: number, week: number): Date => {\r\n    const d = new Date();\r\n    d.setFullYear(year);\r\n    d.setMonth(month - 1, 1);\r\n    d.setHours(0);\r\n    // d.setDate(1);\r\n\r\n    // d.setHours(0, 0, 0, 0);\r\n\r\n    //day indexing >> lord's day:0, mon:1 ~\r\n    var initDay = d.getDay()\r\n    console.log('getDate init D', d);\r\n    console.log(\"year:\", d.getUTCFullYear(), \",month:\", d.getUTCMonth(), \",day:\", d.getUTCDate());\r\n    if (initDay == 0) {\r\n        let leftDate = (week - 1) * 7;\r\n        d.setDate(1 + leftDate);\r\n    } else {\r\n        let nextOffsetOfSundayFromInitDay = 7 - initDay\r\n        let leftDate = (week - 1) * 7\r\n        d.setDate(1 + nextOffsetOfSundayFromInitDay + leftDate)\r\n    }\r\n    return d;\r\n}\r\nexport const getDiffWeek = (targetDate: Date): number => {\r\n    let startDate = getStartDate()\r\n    let raw = (targetDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24 * 7)\r\n    var weeks = Math.ceil(raw);\r\n    console.log(\"raw diff dates:\", raw);\r\n\r\n    console.log(\"getDiffWeek:\", weeks, \",targetDate:\", targetDate, \",startDate:\", startDate);\r\n\r\n    return weeks;\r\n}\r\n\r\n","export enum Room{\r\n    KINDERGARTEN=1400,\r\n    ELEMENTARY=1400,\r\n    TEENAGER=1516,\r\n    ADULT=1140\r\n}\r\n","// import { throws } from \"assert\";\r\nimport { bracketRegex, weeklyList } from \"./const\";\r\nimport { Room } from \"./enum\";\r\n\r\nexport class FrontHeaderTable {\r\n  no: number;\r\n  date: Date;\r\n  weekly: number;\r\n  ban: string;\r\n  dateString: string;\r\n  constructor(no: number, date: Date, weekly: number, ban: string) {\r\n    this.no = no;\r\n    this.date = date;\r\n    this.weekly = weekly;\r\n    this.ban = ban;\r\n    this.dateString =\r\n      this.date.getFullYear() +\r\n      \" 년 \" +\r\n      (this.date.getMonth() + 1) +\r\n      \" 월 \" +\r\n      this.date.getDate() +\r\n      \" 일 \" +\r\n      weeklyList[this.weekly]\r\n\r\n  }\r\n}\r\n\r\nexport let FrontHanjaList: Array<Hanja>;\r\nexport class Hanja {\r\n  chinese: string;\r\n  korean: string;\r\n  constructor(ch: string, ko: string) {\r\n    this.chinese = ch;\r\n    this.korean = ko;\r\n  }\r\n}\r\nexport class FrontHanja extends Hanja {\r\n  strokeOrder: number;\r\n  subChinese: string;\r\n  subChineseKo: string;\r\n  constructor(\r\n    ch: string,\r\n    korean: string,\r\n    strokeOrder: number,\r\n    subCh: string,\r\n    subChKo: string\r\n  ) {\r\n    super(ch, korean);\r\n    this.strokeOrder = strokeOrder;\r\n    this.subChinese = subCh;\r\n    this.subChineseKo = subChKo;\r\n  }\r\n}\r\n\r\n/**\r\n * ^\r\n * |  front page\r\n * |\r\n * * * * * * * * *\r\n * |\r\n * |  back page\r\n * v\r\n */\r\n\r\nexport class Question {\r\n  /**\r\n   * ex) q1 = 1. 에베소 교회(敎會)기 미워한 것은 무엇인가?\r\n   */\r\n  questionList = [\"\", \"\", \"\"];\r\n\r\n  constructor(q1: string, q2: string, q3: string) {\r\n    this.questionList[0] = q1;\r\n    this.questionList[1] = q2;\r\n    this.questionList[2] = q3;\r\n  }\r\n  getKoreanQuestion(index: number): string {\r\n    var q = \"\";\r\n    try {\r\n      q = this.questionList[index];\r\n      q = q.replace(bracketRegex, \"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      return q;\r\n    }\r\n  }\r\n  getHanjaQuestion(index: number): string {\r\n    var q = \"\";\r\n    q = this.questionList[index];\r\n    if (q.match(/[(]/) === null) {\r\n      return q;\r\n    } else {\r\n      while (q.match(bracketRegex) != null) {\r\n        let frontIndex = q.indexOf(\"(\");\r\n        let backIndex = q.indexOf(\")\");\r\n        let chLen = backIndex - frontIndex - 1;\r\n        let removeFirstIndex = frontIndex - chLen;\r\n        q = q.substring(0, removeFirstIndex) + q.substring(frontIndex + 1, backIndex) + q.substring(backIndex + 1, q.length);\r\n\r\n      }\r\n      return q;\r\n    }\r\n  }\r\n}\r\n","//  function makeHeaderTable(htmlElement:HTMLElement){\r\n//     const container = document.createElement(\"div\");\r\n//     container.className = \"container\"\r\n\r\nimport React, { Props, PropsWithRef, ReactInstance } from \"react\";\r\nimport { getEnabledCategories } from \"trace_events\"\r\nimport { FrontHeaderTable } from \"../../model/table\";\r\nimport \"../Contents.css\"\r\nimport \"../print_css/back.css\"\r\n\r\nexport interface BackHeader{\r\n    no:number\r\n    main_word:string\r\n    ban:string\r\n}\r\nconst centerText = \"聖 經 工 課 問 答\"\r\nexport const BackHeaderView = (back:BackHeader) => {\r\n    return (\r\n        <div className=\"back-header\">\r\n            <div className=\"grid-back-center\">{centerText}</div>\r\n            <div className=\"grid-back-top-left\">{back.ban}반 제 {back.no} 호</div>\r\n            <div className=\"grid-back-bottom-right\"></div>\r\n            <div className=\"grid-back-bottom-left\">{back.main_word}</div>\r\n            <div className=\"grid-back-top-right\">確   認</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const HeaderView = (header: FrontHeaderTable) => {\r\n\r\n    return (\r\n        <div className=\"top hanja\">\r\n            <div className=\"grid-000 top-item\">第 <span className=\"kr\">{header.no}</span> 號</div>\r\n            <div className=\"grid-001 top-item\">聖 經 漢 字 工 夫</div>\r\n            <div className=\"grid-002 top-item\"><span className=\"kr\">{header.ban}</span> 班</div>\r\n            <div className=\"grid-010 top-item kr\">{header.dateString}</div>\r\n            <div className=\"grid-011 top-item\">漢字 姓名</div>\r\n            <div className=\"grid-012 top-item\"> </div>\r\n        </div>\r\n    )\r\n}\r\n","import { BackContents, Index } from \"../../model/Api\"\nimport { banList } from \"../../model/const\"\nimport \"../print_css/back.css\"\nimport { BackHeaderView, HeaderView } from \"./header\"\ntype Back = {\n    index: Index\n}\nexport function toAdultText(text: string): JSX.Element {\n    var cnt = 0\n    var str = text\n    var jsxList: JSX.Element[] = []\n    while (true) {\n        if (cnt > 20) {\n            console.error(\"It may infinit loop\")\n            break\n        }\n        let endIndex = str.indexOf(\")\")\n        let startIndex = str.indexOf(\"(\")\n\n\n        if (endIndex == -1) break\n        let len = endIndex - startIndex - 1\n        console.log(len)\n        let ch = <span className=\"ch\">{str.substring(startIndex + 1, endIndex)}</span>\n        jsxList.push(ch)\n        str = str.substring(0, startIndex - len) + \"$\" + str.substring(endIndex + 1, str.length)\n\n        cnt++\n    }\n    var chCnt = 0\n    let jsx: JSX.Element = <>\n        {\n            str.split(\"\").map((val, idx) => {\n                if (val == \"$\") {\n                    chCnt++\n                    console.log(\"map\" + chCnt);\n\n                    return jsxList[chCnt - 1]\n                } else return <>{val}</>\n\n            })\n\n        }\n    </>\n    return jsx\n    // return <>{str.replaceAll(\"#\",\"<span classNmae='ch'>\").replaceAll(\"$\",\"</span>\")}</>\n}\n//backContents.index \nexport const BackView = (backContents: BackContents) => {\n\n    const qCnt = backContents.questions.length\n    const QuestionsView = (back: Back) => {\n        const list = backContents.questions.map((questions) => {\n            if (back.index != Index.Adult)\n                return questions.q.replaceAll(/[(](.*?)[)]/gi, \"\")\n            else {\n                return toAdultText(questions.q)\n            }\n        })\n        return (\n            <>\n                <div className=\"back-box q1 kr\">      <div className=\"back-text\">1. {qCnt > 0 && list[0]}</div><div className=\"q-answer\" /> </div>\n                <div className=\"back-box q2 kr\">      <div className=\"back-text\">2. {qCnt > 1 && list[1]}</div><div className=\"q-answer\" /> </div>\n\n                {(qCnt == 3 || (qCnt < 3 && backContents.index == 3)) && <div className=\"back-box q3 kr\"><div className=\"back-text\">3. {qCnt > 2 && list[2]}</div><div className=\"q-answer\" /> </div>}\n            </>\n        )\n    }\n    const hasOverThreeWord = backContents.back_hanja_list.findIndex((v, i) =>  v.length > 2 );\n\n    const BottomHanjasView = (back: Back) => (\n        <div className={'back-box back-bottom ' + \"back-bottom\" + back.index}  >\n            <div className=\"back-title-container\">\n                <div className=\"back-bottom-title kr\"><span className=\"ch\">聖經漢字</span> 배우기</div>\n                {/* <div/><div/> */}\n                <div className=\"back-bottom-where kr\">({backContents.back_hanja_list[0]})</div>\n            </div>\n            <div className=\"back-bottom-hanja-container\">\n\n                {backContents.back_hanja_list.filter((v, i) => { return i != 0 }).map((val, index) => {\n\n                    // console.log(val);\n                    if (back.index == Index.Child && index >= 12) return\n                    var el = val.trim()\n                    const elLen = el.length;\n                    const korean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n                    const regex = new RegExp(korean)\n                    var jsx: JSX.Element = <></>\n                    const isKr = el.match(regex) != undefined\n                    if (isKr) {\n                        jsx = <span className=\"bottom-hanja-kr kr\">{el}</span>\n                    }\n\n\n                    if (index % 4 == 0) return <div className={\"back-wrap back-hanja-text \" }>{isKr && jsx}{!isKr && el}{val.trim().length > 2 && <br />}(<span className=\"bracket\">{val.trim()}</span>) </div>\n                    return <div className={\"back-hanja-text \"}>{isKr && jsx}{!isKr && el}{val.trim().length > 2 && <br />}(<span className=\"bracket\">{val.trim()}</span>)</div>\n                })}\n            </div>\n\n        </div>\n    )\n    const YouthYojeolView = () => (\n        <>\n            <div className=\"back-box youth-y1 kr\">\n\n                <div className=\"back-text back-yojeol yojeol-title\">다음 주 <span className=\"ch\">午前 要節</span></div>\n                <div className=\"back-text back-yojeol\">\n                    {backContents.yojeol.morning.words}\n                </div>\n                <div className=\"back-yojeol-where kr\">{backContents.yojeol.morning.where}</div>\n            </div>\n            <div className=\"back-box youth-y2 kr\">\n                <div className=\"back-text back-yojeol yojeol-title\"> 이번 주 <span className=\"ch\">午後 要節</span></div>\n                <div className=\"back-text back-yojeol\">{backContents.yojeol.youth_afternoon.words}</div>\n                <div className=\"back-yojeol-where\">{backContents.yojeol.youth_afternoon.where}</div>\n            </div>\n        </>\n    )\n    const ChildYojeolView = () => (\n        <>\n            <div className=\"back-box child-y1 kr\">\n                <div className=\"back-text back-yojeol\">\n                    <div className=\"back-child-yojeol-title\">다음 주 오전 요절 쓰기</div>\n                    {backContents.yojeol.morning.words}\n                    <ol>\n                        <li> <div className=\"line line1\" >1.</div></li>\n                        <li> <div className=\"line line2\" >2.</div></li>\n                        <li> <div className=\"line line3\" >3.</div></li>\n                    </ol>\n                    <div className=\"child-yojeol-where\">\n                        {backContents.yojeol.morning.where}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n    const AdultYojeolView = () => (\n        <div className=\"back-box adult-y1 kr\">\n            <div className=\"yojeol-title\">\n                요절 찾고 외우기\n            </div>\n            <div className=\"back-text back-yojeol\">\n                {toAdultText(backContents.yojeol.adult.words)}\n            </div>\n            <div className=\"back-yojeol-where back-adult-where\">\n                {backContents.yojeol.adult.where}\n            </div>\n            <div className=\"back-text back-last-answer\">(지난 주 해답 : {backContents.yojeol.adult.answer})</div>\n        </div>\n    )\n    const YouthBackBottomView = (back: Back) => {\n        return (\n            <div className=\"back-content hanja\">\n                <QuestionsView index={back.index} />\n                <YouthYojeolView />\n                <BottomHanjasView index={back.index} />\n            </div>\n        )\n    }\n\n    const ChildBackBottomView = (back: Back) => (\n        <div className=\"back-content hanja\">\n            <QuestionsView index={back.index} />\n            <ChildYojeolView />\n            <BottomHanjasView index={back.index} />\n        </div>\n    )\n\n    const AdultBackBottomView = (back: Back) => (\n        <div className=\"back-content hanja\">\n            <QuestionsView index={back.index} />\n            <AdultYojeolView />\n            <BottomHanjasView index={back.index} />\n        </div>\n    )\n\n    return (\n        <div className=\"hanja-middle\">\n            <BackHeaderView\n                no={backContents.order}\n                main_word={backContents.main_words}\n                ban={banList[backContents.index]} />\n\n            <div className=\"text\">\n                문답\n            </div>\n\n            {backContents.index == Index.Child && <ChildBackBottomView index={Index.Child} />}\n            {backContents.index == Index.Youth && <YouthBackBottomView index={Index.Youth} />}\n            {backContents.index == Index.Adult && <AdultBackBottomView index={Index.Adult} />}\n        </div>\n    )\n}\n\n\n","import { BackContents } from \"../../model/Api\"\nimport { getDate, weeklyList } from \"../../model/const\"\nimport \"../print_css/kinder.css\"\nexport const KinderHeaderView = (kinderPrintDto: KinderPrintDto) => {\n    return (\n\n        <div className=\"kinder-header\">\n            <div className=\"grid-kinder-center\">유치부 성경 요절 쓰기</div>\n            <div className=\"grid-kinder-name-title\">성명</div>\n            <div className=\"grid-kinder-name0\"></div>\n            <div className=\"grid-kinder-name1\"></div>\n            <div className=\"grid-kinder-name2\"></div>\n            <div className=\"grid-kinder-word-title\">다음주 요절 쓰기</div>\n            <div className=\"grid-kinder-where\">{kinderPrintDto.where}</div>\n        </div>\n    )\n\n}\ntype KinderPrintDto = {\n    where: string;\n    yojeol: string;\n    order: number;\n    dataString: string;\n    isFront: boolean\n\n}\nexport const KinderPrintView = (kinderPrintDto: KinderPrintDto) => {\n    var row = 15\n    const col = 11\n\n    // const yojeol = kinderPrintDto.yojeol;\n    const yojeol = \" \" + kinderPrintDto.yojeol\n    const follow = yojeol\n    const yojeolCnt = (yojeol.length)\n    // 가로 11줄, 세로 15줄\n    const yojeolLineCnt = Math.ceil(yojeolCnt / 11)\n    if (yojeolLineCnt > 7) {\n        row = 16\n    }\n    const lineDiff = Math.round(15 / yojeolLineCnt)\n\n    var arr2D: Array<Array<JSX.Element>> = new Array(15)\n    var cnt = 0;\n    var followCnt = 0;\n    for (let i = 0; i < row; i++) {\n        arr2D[i] = [];\n        var isInsertLine: boolean = false\n        var followInserLine = false\n        if (i % lineDiff == 0) isInsertLine = true\n        else if (i % lineDiff == 1) followInserLine = true\n        else isInsertLine = false\n\n        for (let j = 0; j < col; j++) {\n            if (yojeolCnt > cnt && isInsertLine) {\n                if(i != 0 && j == 0 && yojeol[cnt] == \" \"){\n                    cnt++\n                }\n                arr2D[i][j] = <th className=\"one\">{yojeol[cnt]}</th>\n                cnt++;\n            } else if (yojeolCnt > followCnt && followInserLine) {\n                if(i != 1 && j == 0 && yojeol[followCnt] == \" \"){\n                    followCnt++\n                }\n                arr2D[i][j] = <th className=\"follow\">{yojeol[followCnt]}</th>\n                followCnt++;\n            } else {\n                arr2D[i][j] = <th></th>\n            }\n        }\n    }\n    // console.log(arr2D);\n\n\n    return (\n        <div className=\"hanja kr\">\n\n            <KinderHeaderView where={kinderPrintDto.where} yojeol={kinderPrintDto.yojeol} order={kinderPrintDto.order} dataString={kinderPrintDto.dataString} isFront={false} />\n\n            <div className=\"kinder-date\">\n                <div>제 {kinderPrintDto.order}호 </div><div> 주후 {kinderPrintDto.dataString} </div><div className=\"kinder-date-end\">  염천교회 주일학교 유치부</div>\n            </div>\n            <table className=\"kinder-table\">\n                {\n                    arr2D.map((el) => (\n                        <tr>\n                            {\n                                el.map((tr) => {\n                                    return tr\n                                })\n                            }\n                        </tr>\n                    ))\n                }\n            </table>\n        </div>\n    )\n}","import { ContentsDto, FrontHanjaList, Index, Voca } from \"../../model/Api\";\n\n\nfunction frontWriteTable(age: Index, rowCnt: Number, swapHanjaList: Array<FrontHanjaList | null>): JSX.Element {\n    let rowArr = []\n    for (let i = 0; i < rowCnt; i++) {\n        rowArr[i] = i\n    }\n    return (<table>\n        <tbody>\n            {\n                rowArr.map((value, index) => {\n                    return (\n                        <tr className={index == 0 && \"hanja-big ch\" || index == 1 && \"hanja-name kr\" || index == 2 && \"hanja-big follow-ch ch\" || index == 3 && \"hanja-name kr\" || \"\"} >\n                            <td className=\"1\">{((index == 0 || index == 2) && (swapHanjaList[0] !== null)) && (swapHanjaList[0] as FrontHanjaList).hanja}</td>\n\n                            <td className=\"2\">{((index == 0 || index == 2) && (swapHanjaList[1] !== null)) && (swapHanjaList[1] as FrontHanjaList).hanja}</td>\n                            <td>{((index == 0 || index == 2) && (swapHanjaList[2] !== null)) && (swapHanjaList[2] as FrontHanjaList).hanja}</td>\n                            <td>{((index == 0 || index == 2) && (swapHanjaList[3] !== null)) && (swapHanjaList[3] as FrontHanjaList).hanja}</td>\n                        </tr>\n                    )\n                })\n            }\n        </tbody>\n    </table>\n    )\n}\nexport function frontWriteView(age: Index, swapHanjaList: Array<FrontHanjaList | null>, firstVocaLen:number): JSX.Element {\n    var rowCnt = 9\n    if (age == Index.Child) {\n        rowCnt = 7\n        if (firstVocaLen == 3){\n            rowCnt = 8\n        }\n    }\n    return (\n        <div className=\"bottom-table\">\n            <span className=\"bottom-left\">\n                {frontWriteTable(age, rowCnt, swapHanjaList)}\n            </span>\n            <span className=\"bottom-right\">\n                {frontWriteTable(age, rowCnt, swapHanjaList)}\n            </span>\n\n        </div>\n    )\n}\n\nexport function childWordWriteView(vocaArr: Array<Voca>): JSX.Element {\n    //예외 단어가 4글자일때\n    var isSpecialCase = false\n    if( vocaArr.length == 1 && vocaArr[0].hanja.length == 4){\n        isSpecialCase = true\n    }\n    return (\n        <div className=\"write_voca_total_container hanja\">\n            {\n                vocaArr.map((voca, i) => (\n                    <div className={`write_voca_container` }>\n                        {voca.hanja.split(\"\").filter((v) => v != \"\").map((hanja, j) => (\n                            <>\n                                <div className=\"voca_hanja_unit\">\n                                    <div className=\"voca_hanja\">{hanja}</div>\n                                    <div className=\"voca_mean_sound_unit\">\n                                        <div className=\"voca_mean_key\"><div>뜻</div></div>\n                                        <div className=\"voca_sound_key\"><div>음</div></div>\n                                        <div className=\"voca_mean_value\">뜻</div>\n                                        <div className=\"vocal_sound_value\">음</div>\n                                    </div>\n                                </div>\n                            </>\n                        ))}\n                        <div className={ \"write_voca_mean\"}>\n                        </div>\n\n                    </div >\n                )\n                )\n            }\n            {isSpecialCase && <div className=\"four_len_voca_write\">{vocaArr[0].hanja}<br/>{vocaArr[0].hanja}</div>}\n        </div>\n    )\n}","import { ContentsDto, FrontHanjaList, Index, Voca } from \"../../model/Api\"\nimport { banList, getDate, getDiffWeek, getWeekly } from \"../../model/const\";\nimport { Room } from \"../../model/enum\";\nimport { FrontHeaderTable } from \"../../model/table\";\nimport '../print_css/print.css'\nimport '../print_css/stroks.css'\nimport '../print_css/top.css'\nimport '../print_css/var.css'\nimport '../print_css/word.css'\nimport '../print_css/voca.css'\nimport { BackView } from \"./BackView\";\nimport { HeaderView } from \"./header\";\nimport { KinderPrintView } from \"./KinderPrintView\";\nimport { childWordWriteView, frontWriteView } from \"./FrontPrintViewUtils\";\nexport const makeNextLineBracket = (str: string): JSX.Element => {\n    try {\n        const list = str.split(\"(\").map((el, i) => {\n            if (i == 1) return \"(\" + el\n            return el\n        })\n\n        return (\n            <>\n                <span className=\"sub-ch ch\">{list[0]}</span><br />\n                <span className=\"sub-kr kr\">{list[1]}</span>\n            </>\n        )\n    } catch (error) {\n        console.error(error);\n        return <div>정보가 없어요.</div>\n\n    }\n}\nconst EachOrderList = (weeks: number): number[] => [\n    (Room.KINDERGARTEN + weeks),\n    (Room.ELEMENTARY + weeks),\n    (Room.TEENAGER + weeks),\n    (Room.ADULT + weeks)\n]\nexport const PrintView = (contentDto: ContentsDto) => {\n    console.log(contentDto.yaer, contentDto.month, contentDto.week);\n\n    const targetDate = getDate(contentDto.yaer, contentDto.month, contentDto.week);\n\n    console.log('target!!', targetDate);\n\n    const diffWeek = getDiffWeek(targetDate);\n    const numList = EachOrderList(diffWeek)\n    const headerList: FrontHeaderTable[] = numList.map<FrontHeaderTable>((no, index) => {\n        return new FrontHeaderTable(no, targetDate, getWeekly(targetDate), banList[index])\n    })\n    console.log(\"headerList\", headerList);\n\n    const headerViews: JSX.Element[] = headerList.map<JSX.Element>((frontTable) => {\n        return <HeaderView no={frontTable.no} date={frontTable.date} weekly={frontTable.weekly} ban={frontTable.ban} dateString={frontTable.dateString} />;\n    })\n\n    interface AgeIndex {\n        age: Index\n    }\n    const WordViews = () => {\n        // var vocaCnt = 1\n\n        var vocaCnt\n        try {\n            vocaCnt = contentDto.voca_list.length\n\n        } catch (error) {\n            return <div>정보 없음</div>\n        }\n        var view\n        if (vocaCnt == 2) {\n            view = (<div className=\"word hanja\">\n                <div className=\"grid-100 word-item ch\">{contentDto.voca_list[0].hanja}</div>\n                <div className=\"grid-101 word-item kr\">{contentDto.voca_list[0].mean}</div>\n                <div className=\"grid-102 word-item ch\">{contentDto.voca_list[1].hanja}</div>\n                <div className=\"grid-103 word-item kr\">{contentDto.voca_list[1].mean}</div>\n            </div>)\n        } else {\n            view = (<div className=\"word1 hanja\">\n                <div className=\"grid-100 word-item ch\">{contentDto.voca_list[0].hanja}</div>\n                <div className=\"grid-101 word-item kr\">{contentDto.voca_list[0].mean}</div>\n            </div>)\n        }\n        return view\n    };\n\n\n    let hanjaList = getNewHanjaList(contentDto.voca_list, contentDto.front_hanja_list)\n    const strokeView: JSX.Element = (\n        <div className=\"stroke-table\">\n            {\n\n                [0, 1, 2, 3].map((_, index) => {\n                    //한자 자리 배치도와주는 배열\n\n                    if (hanjaList[index] != null) {\n                        var el = hanjaList[index] as FrontHanjaList\n                        console.log(\"el >>\" + el.hanja + \", index:\" + index)\n\n                        const drawCnt = el.draw_list.length\n                        const realCnt = el.count\n                        return (\n                            <div className={\"stroke\" + index}>\n                                <div className=\"grid-hanja0 ch\">{el.hanja}<span className=\"total-stroke kr\">{realCnt}</span></div>\n                                <div className=\"grid-name0 kr\"><div className=\"hanja-name-stroke\">{el.name}</div></div>\n                                <div className=\"grid-sub0 kr\"><span className=\"sub-title\"></span>{makeNextLineBracket(el.sub)} </div>\n                                <div className=\"grid-s0-0\">{drawCnt > 0 && <img src={el.draw_list[0]} />}</div>\n                                <div className=\"grid-s0-1\">{drawCnt > 1 && <img src={el.draw_list[1]} />}</div>\n                                <div className=\"grid-s0-2\">{drawCnt > 2 && <img src={el.draw_list[2]} />}</div>\n                                <div className=\"grid-s0-3\">{drawCnt > 3 && <img src={el.draw_list[3]} />}</div>\n                                <div className=\"grid-s0-4\">{drawCnt > 4 && <img src={el.draw_list[4]} />}</div>\n                                <div className=\"grid-s0-5\">{drawCnt > 5 && <img src={el.draw_list[5]} />}</div>\n                                <div className=\"grid-s0-6\">{drawCnt > 6 && <img src={el.draw_list[6]} />}</div>\n                                <div className=\"grid-s0-7\">{drawCnt > 7 && <img src={el.draw_list[7]} />}</div>\n                                <div className=\"grid-s0-8\">{drawCnt > 8 && <img src={el.draw_list[8]} />}</div>\n                                <div className=\"grid-s0-9\">{drawCnt > 9 && <img src={el.draw_list[9]} />}</div>\n                                <div className=\"grid-s0-10\">{drawCnt > 10 && <img src={el.draw_list[10]} />}</div>\n                                <div className=\"grid-s0-11\">{drawCnt > 11 && <img src={el.draw_list[11]} />}</div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div className={\"stroke\" + index}>\n                                <div className=\"grid-hanja0\"></div>\n                                <div className=\"grid-name0\"></div>\n                                <div className=\"grid-sub0\"> </div>\n                                <div className=\"grid-s0-0\"></div>\n                                <div className=\"grid-s0-1\"></div>\n                                <div className=\"grid-s0-2\"></div>\n                                <div className=\"grid-s0-3\"></div>\n                                <div className=\"grid-s0-4\"></div>\n                                <div className=\"grid-s0-5\"></div>\n                                <div className=\"grid-s0-6\"></div>\n                                <div className=\"grid-s0-7\"></div>\n                                <div className=\"grid-s0-8\"></div>\n                                <div className=\"grid-s0-9\"></div>\n                                <div className=\"grid-s0-10\"></div>\n                                <div className=\"grid-s0-11\"></div>\n                            </div>\n                        )\n                    }\n\n                })\n            }\n\n        </div>\n    )\n    const nineList: number[] = []\n    for (let index = 0; index < 9; index++) {\n        nineList.push(index);\n    }\n\n    let swapHanjaList = swap(hanjaList)\n    // const writeTable = (\n    //     <table>\n    //         <tbody>\n    //             {\n    //                 nineList.map((v, i) => {\n    //                     return (\n    //                         <tr className={v == 0 && \"hanja-big ch\" || v == 1 && \"hanja-name kr\" || v == 2 && \"hanja-big follow-ch ch\" || v == 3 && \"hanja-name kr\" || \"\"} >\n    //                             <td className=\"1\">{((v == 0 || v == 2) && (swapHanjaList[0] !== null))&& (swapHanjaList[0] as FrontHanjaList).hanja}0</td>\n\n    //                             <td className=\"2\">{((v == 0 || v == 2) && (swapHanjaList[1] !== null)) && (swapHanjaList[1] as FrontHanjaList).hanja}1</td>\n    //                             <td>{((v == 0 || v == 2) && (swapHanjaList[2] !== null)) && (swapHanjaList[2] as FrontHanjaList).hanja}2</td>\n    //                             <td>{((v == 0 || v == 2) && (swapHanjaList[3] !== null)) &&  (swapHanjaList[3] as FrontHanjaList).hanja}3</td>\n    //                         </tr>\n    //                     )\n    //                 })\n    //             }\n    //         </tbody>\n    //     </table>\n    // )\n\n    // const wrtieView: JSX.Element = (\n    //     <div className=\"bottom-table\">\n    //         <span className=\"bottom-left\">\n\n    //             {writeTable}\n\n    //         </span>\n    //         <span className=\"bottom-right\">\n\n    //             {writeTable}\n    //         </span>\n\n    //     </div>\n    // )\n\n    let ageIndexList = [\n        Index.Kinder, Index.Child, Index.Youth, Index.Adult\n    ]\n    return (\n        <div>\n\n            {ageIndexList.map((index) => {\n                var view\n                if (index == Index.Kinder) {\n                    view =\n                        <div>\n                            <div className=\"a4\">\n                                <KinderPrintView\n                                    where={contentDto.yojeol.morning.where}\n                                    yojeol={contentDto.yojeol.morning.words}\n                                    order={headerList[0].no} dataString={headerList[0].dateString} isFront={true} />\n                            </div>\n                            <div className=\"a4\">\n                                <KinderPrintView\n                                    where={contentDto.yojeol.morning.where}\n                                    yojeol={contentDto.yojeol.morning.words}\n                                    order={headerList[0].no} dataString={headerList[0].dateString} isFront={false} />\n                            </div>\n                        </div>\n                } else {\n                    view = (\n                        <div>\n                            <div className=\"a4\">\n\n                                {headerViews[index]}\n                                <WordViews />\n                                {index == Index.Child && childWordWriteView(contentDto.voca_list)}\n\n                                {strokeView}\n                                {frontWriteView(index, swapHanjaList, contentDto.voca_list[0].hanja.length)}\n                            </div>\n                            <div className=\"a4\">\n                                <BackView main_words={contentDto.main_words}\n                                    questions={contentDto.questions}\n                                    yojeol={contentDto.yojeol}\n                                    back_hanja_list={contentDto.back_hanja_list}\n                                    week={contentDto.week}\n                                    month={contentDto.month}\n                                    yaer={contentDto.yaer} index={index} order={numList[index]} />\n                            </div>\n                        </div>\n                    )\n\n                }\n                return view\n            })}\n\n        </div>\n    )\n\n}\n\nfunction getEachHanjaIndexArr(voca_list: Voca[]): Array<Boolean> {\n    var boolArr = [true, true, true, true];\n    let totalVocaLen = voca_list.length\n    var secondVocaLen = 2\n    if (totalVocaLen == 1) {\n        let firstVocaLen = voca_list[0].hanja.length\n        switch (firstVocaLen) {\n            case 3:\n                return [true,true,true,false]\n            case 4:\n                return boolArr\n            default:\n                throw new Error(\"그렇게하지 말고, 좀 더 생각해봐. 너무 적다...\");\n                \n        }\n    } else if (totalVocaLen == 2) {\n        let firstVocaLen = voca_list[0].hanja.length\n        secondVocaLen = voca_list[1].hanja.length\n        if(firstVocaLen == 1 && secondVocaLen == 1){\n            return [true,false,true,false]\n        } else if (firstVocaLen == 1 && secondVocaLen == 2){\n            return [true,false,true,true]\n        } else if(firstVocaLen == 1 && secondVocaLen == 3 ){\n            return boolArr\n        } else if(firstVocaLen == 2 && secondVocaLen == 2){\n            return boolArr\n        } else if(firstVocaLen == 2 && secondVocaLen == 1){\n            return [true,true,false,true]\n        }else if(firstVocaLen == 3 && secondVocaLen == 1){\n            return boolArr\n        }\n    }\n\n\n\n    if (totalVocaLen == 2) {\n        secondVocaLen = voca_list[1].hanja.length\n    }\n    let firstVocaLen = voca_list[0].hanja.length\n    if (firstVocaLen == 2) return boolArr\n    if (firstVocaLen == 1) {\n        switch (secondVocaLen) {\n            case 1:\n                return [true, false, true, false]\n            case 2:\n                return [true, false, true, true]\n            case 3:\n                return boolArr\n            default:\n                break;\n        }\n    }\n    return boolArr\n\n\n}\nfunction getNewHanjaList(voca_list: Voca[], front_hanja_list: FrontHanjaList[]): (FrontHanjaList | null)[] {\n    let getBoolArr = getEachHanjaIndexArr(voca_list)\n    var index = 0\n    var list = getBoolArr.map((hasHanja, i) => {\n        if (hasHanja) {\n            return front_hanja_list[index++]\n        } else {\n            return null\n        }\n    })\n    //swap\n    let temp = list[1]\n    list[1] = list[2]\n    list[2] = temp\n    return list\n}\n\nfunction swap(hanjaList: (FrontHanjaList | null)[]): (FrontHanjaList | null)[] {\n    var list = hanjaList\n    let temp = list[1]\n    list[1] = list[2]\n    list[2] = temp\n    return list\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport { getYears, nowAsNextWeek, nowYear, setNotFoundMessage } from \"./util/util\";\nimport { BrowserRouter, Link, Route, Router, useHistory } from \"react-router-dom\";\nimport { HeaderView } from \"./view/print/header\";\nimport SideBar from \"./view/SideBar\";\nimport { ContentsWrapper } from \"./view/Contents\";\nimport \"./App.css\"\n// import \"./view/print_css/font.scss\"\nimport { ContentsDto, YearJson } from \"./model/Api\";\nimport { AxiosResponse } from \"axios\";\nimport { getMonthsJson, getYearsJson } from \"./util/api_utils\";\nimport { PrintView } from \"./view/print/PrintView\";\nimport { GenModal } from \"./view/Generator\";\ntype AppProps = {\n  link: string\n}\nexport const gitRoot = \"yc_hanja_page\"\nconst initMonthYear: string = \"/\" + nowYear + \"/\" + (nowAsNextWeek.getMonth() + 1)\n\n\nfunction App(linkState: AppProps) {\n  const frontList = getYears();\n  console.log(frontList);\n\n  useEffect(() => {\n    updateUrlPath(linkState.link)\n  }, [linkState.link])\n  let view: JSX.Element;\n  var notFountMessage: string | null = null;\n\n  const [url_path, updateUrlPath] = useState<string>(initMonthYear);\n  const [contentsDto, updateContentsDto] = useState<ContentsDto[] | null>(null);\n  const [notFound, updateNotFound] = useState<string | null>(null);\n  const [printViewContentsDto, setPrintViewContentDto] = useState<ContentsDto | null>(null);\n  const [tempPrintViewContentsDto, setTempPrintViewContentDto] = useState<ContentsDto | null>(null);\n\n  const [tempYearMonth, updateTempYearMonth] = useState<string>(\"\");\n  var pathname:string\n  //init\n  if (window.location.pathname == \"/\" || window.location.pathname ==\"/\"+ gitRoot + \"/\") {\n    pathname = \"/\"+ gitRoot + initMonthYear\n  } else{\n    pathname = window.location.pathname\n  }\n\n  console.log(\"now week\",nowAsNextWeek);\n  \n  //  = window.location.pathname;\n  console.log('pathname', pathname);\n\n  var [year, month, week]: string[] = pathname.split(\"/\").filter(v => v != \"\" && !v.includes(gitRoot));\n  if (year == undefined) {\n    [year, month] = initMonthYear.split(\"/\").filter(v => v != \"\" )\n  }\n  console.log('filtered >>>> ', year, month, week);\n  if (!week) {\n    if (printViewContentsDto != null)\n      setPrintViewContentDto(null);\n  }\n\n  const [monthFiles, updateMonthFiles] = useState<string[] | null>(null);\n  useEffect(() => {\n    getYearsJson(year).then((yaerJson: YearJson | null) => {\n      console.log('getYearsJson>>>>>', yaerJson);\n\n      if (!yaerJson) return (<div>Not found</div>);\n      updateMonthFiles(yaerJson.month_files);\n    })\n  }, [pathname]);\n\n  useEffect(() => {\n    if (!week) {\n      console.log(\"not week\");\n\n      setPrintViewContentDto(null);\n    }\n    else {\n      console.log(\"yes week\", tempPrintViewContentsDto, \"&\");\n      setPrintViewContentDto(tempPrintViewContentsDto);\n    }\n  }, [week])\n\n  useEffect(() => {\n    console.log('monthFiles', monthFiles);\n    console.log(window.location.pathname == url_path);\n\n    if (!monthFiles) return;\n\n    const monthIndex = parseInt(month) - 1;\n    const path = monthFiles[monthIndex];\n\n    console.log('path>>>>>>>', path);\n    if (path) {\n\n      getMonthsJson(String(year), path).then((contentsDtos: ContentsDto[] | null) => {\n        if (!contentsDtos) {\n          updateNotFound(setNotFoundMessage(year, month, week));\n        } else {\n          console.log('contentdto array >>', contentsDtos);\n\n          updateContentsDto(contentsDtos);\n          updateUrlPath(window.location.pathname);\n          updateNotFound(null);\n        }\n      }).catch(err => {\n        updateNotFound(setNotFoundMessage(year, month, week));\n      })\n    } else {\n      updateNotFound(setNotFoundMessage(year, month, week))\n    }\n  }, [monthFiles]);\n\n  const handleUpdate = (yearMonth: string) => {\n    updateUrlPath(yearMonth);\n    updateTempYearMonth(yearMonth);\n    console.log(\"App > update\");\n  }\n\n  const handleContentDto = (dto: ContentsDto | null) => {\n    setPrintViewContentDto(dto);\n    setTempPrintViewContentDto(dto);\n  }\n\n\n  if (printViewContentsDto == null) {\n    view = (\n      <>\n\n        <SideBar years={getYears()} stateHandler={handleUpdate} />\n        <ContentsWrapper yearMonth={url_path} handleContentDto={handleContentDto} notFound={notFound} year={year} month={month} week={week} contentsList={contentsDto} />\n      </>\n    )\n  } else {\n    const content = contentsDto![parseInt(week) - 1]\n    console.log(\"content:\",content);\n    \n    try {\n\n      view = (\n        <>\n          <PrintView front_hanja_list={content.front_hanja_list}\n            main_words={content.main_words}\n            questions={content.questions}\n            yojeol={content.yojeol}\n            back_hanja_list={content.back_hanja_list}\n            week={content.week}\n            handleContentDto={content.handleContentDto}\n            month={parseInt(month)}\n            yaer={parseInt(year)} voca_list={content.voca_list} />\n        </>\n      )\n      return view;\n    } catch (err) {\n      view = React.createElement(\"div\", null, \"hello\")\n    }\n  }\n  return (\n    <div className=\"App\">\n      {/* <GenModal/> */}\n      {view}\n    </div >\n  );\n}\n\nexport default App;\n","import axios, { AxiosResponse } from \"axios\";\nimport { ContentsDto, YearJson } from \"../model/Api\";\n\nexport function getYearsJson(year: string): Promise<YearJson | null> {\n    const fetch =\n        axios(\n            {\n                method: \"get\",\n                baseURL: \"https://raw.githubusercontent.com/yegyu/yc_hanja/main/year/\",\n                url: `${year}.json`,\n            }\n        ).then((res: AxiosResponse<YearJson>) => {\n            const yaerJson: YearJson = res.data as YearJson\n            return yaerJson\n        }).catch((error) => {\n            console.error('getYearsJson', error);\n            return null;\n        })\n    return fetch;\n}\nexport function getMonthsJson(year: string, path: string): Promise<ContentsDto[] | null> {\n    return axios(\n        {\n            method: \"get\",\n            baseURL: \"https://raw.githubusercontent.com/yegyu/yc_hanja/main/\",\n            url: year + \"/\" + path,\n        }\n    ).then((res: AxiosResponse<ContentsDto[]>) => {\n        return res.data\n    }).catch((error) => {\n        console.error(error);\n        return null;\n    });\n}","import { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router\"\nimport App  from \"./App\";\n\nexport const Root = () =>{\n    const history = useHistory();\n    const [linkState,setLinkState] = useState(\"\")\n    useEffect(() => {\n        return history.listen((location) => {\n            console.log('root link',location.pathname);\n            setLinkState(location.pathname)\n            \n        })\n    }, [history])\n\n    return <App link={linkState} />\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Root } from './Root';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Root />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}