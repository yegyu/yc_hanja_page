{"version":3,"sources":["reportWebVitals.ts","util/util.ts","model/Api.ts","view/SideBar.tsx","view/Contents.tsx","model/const.ts","model/enum.ts","model/table.ts","view/print/header.tsx","view/print/BackView.tsx","view/print/FrontPrintViewUtils.tsx","view/print/KinderPrintView.tsx","view/print/PrintView.tsx","App.tsx","util/api_utils.ts","Root.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","nowAsNextWeek","date","Date","setDate","getDate","console","log","call","nowYear","getFullYear","getYears","list","first","setFullYear","compareYear","push","setNotFoundMessage","year","month","week","mainInfo","reduce","pre","cur","Index","MonthList","monthProps","onClick","e","id","currentTarget","stateHandler","index","getMonth","thisYear","map","to","gitRoot","className","SideBar","yearsProps","useState","selectedYear","setYear","handleClick","event","target","Number","parseInt","years","toString","isEmpty","str","length","isArrayValueHasEmpty","strs","getMissedInfoSet","contentsDto","set","Set","back_hanja_list","add","filter","value","rs","front_hanja_list","frontHanja","hanja","count","name","sub","main_words","questions","q","a","voca_list","voca","mean","yojeol","adult","answer","words","where","morning","child_afternoon","youth_afternoon","Error","ContentsWrapper","contentsProps","yearMonth","notFound","contentsList","content","handleContentDto","size","yaer","ContentView","frontList","front","RegExp","Room","banList","weeklyList","getStartDate","d","setMonth","setHours","getDiffWeek","targetDate","startDate","raw","getTime","weeks","Math","ceil","FrontHeaderTable","no","weekly","ban","dateString","this","BackHeaderView","back","main_word","HeaderView","header","toAdultText","text","cnt","jsxList","error","endIndex","indexOf","startIndex","len","ch","substring","chCnt","split","val","idx","ChildWriteCase","BackView","backContents","needAnswer","Youth","qCnt","QuestionsView","Adult","replaceAll","answers","BottomHanjasView","findIndex","v","i","Child","el","trim","regex","jsx","isKr","undefined","match","YouthYojeolView","ChildYojeolView","AdultYojeolView","YouthBackBottomView","ChildBackBottomView","AdultBackBottomView","order","KinderHeaderView","kinderPrintDto","KinderPrintView","row","yojeolCnt","yojeolLineCnt","lineDiff","round","arr2D","Array","followCnt","isInsertLine","followInserLine","j","dataString","isFront","tr","frontWriteTable","age","rowCnt","swapHanjaList","rowArr","frontWriteView","vocaList","getChildWriteCase","vocaArr","enumCase","case22","case4","case3","voca0len","voca1len","case31","case12","case21","case111","forEach","_vocaLen","case211","case112","case1111","childWordWriteView","childWriteCase","rootClassName","needEmptySpace","isRightPostion","childVocaWriteUnit","makeNextLineBracket","WordViews","vocaCnt","view","voca0Len","voca1Len","has2hanja0","has2hanja1","has2hanja2","StrokeView","_hanjaList","hanjaList","swap","Object","assign","_","drawCnt","draw_list","realCnt","src","PrintView","contentDto","initDay","getDay","getUTCFullYear","getUTCMonth","getUTCDate","leftDate","nextOffsetOfSundayFromInitDay","diffWeek","numList","KINDERGARTEN","ELEMENTARY","TEENAGER","ADULT","headerList","firstDate","interpolation","floor","getWeekly","headerViews","frontTable","frontBigHanjaList","getBoolArr","boolArr","totalVocaLen","secondVocaLen","firstVocaLen","getEachHanjaIndexArr","hasHanja","temp","getFrontBigHanjaList","strokeHanjaList","nineList","ageIndexList","Kinder","initMonthYear","App","linkState","useEffect","updateUrlPath","link","pathname","url_path","updateContentsDto","updateNotFound","printViewContentsDto","setPrintViewContentDto","tempPrintViewContentsDto","setTempPrintViewContentDto","updateTempYearMonth","window","location","includes","monthFiles","updateMonthFiles","axios","method","baseURL","url","res","data","catch","getYearsJson","yaerJson","month_files","monthIndex","path","getMonthsJson","String","contentsDtos","err","hostname","dto","React","createElement","Root","history","useHistory","setLinkState","listen","ReactDOM","render","document","getElementById"],"mappings":"6ZAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cC0EP,IAAMQ,EAAuB,WAClC,IAAIC,EAAO,IAAIC,KAIf,OAFAD,EAAKE,QAAQF,EAAKG,UAAY,GAC9BC,QAAQC,IAAI,OAAOL,GACZA,GACNM,UAAK,GAEKC,EAAUR,EAAcS,cAG9B,SAASC,IACd,IAAIC,EAAsB,GACtBC,EAAQ,IAAIV,KAEhB,IADAU,EAAMC,YAAY,QACL,CACX,IAAMC,EAAcF,EAAMH,cAC1B,KAAIK,GAAeN,GAGZ,MAFLG,EAAKI,KAAKD,GACVF,EAAMC,YAAYC,EAAc,GAGpC,OAAOH,EAiBF,SAASK,EAAmBC,EAAcC,EAAeC,GAC9D,IACIC,EAAqB,GAIzB,OAHIH,GAAMG,EAASL,KAAT,UAAiBE,EAAjB,YACNC,GAAOE,EAASL,KAAT,UAAiBG,EAAjB,YACPC,GAAMC,EAASL,KAAT,UAAiBI,EAAjB,kBACHC,EAASC,QAAO,SAACC,EAAKC,GAAN,OACrBD,EAAMC,KANS,+CA/BnBlB,QAAQC,IAAI,WAAYE,G,IC2CZgB,E,sBCvHNC,EAAY,SAACC,GACjBrB,QAAQC,IAAI,aAAcoB,GAC1B,IAAMf,EAA2B,GAC3BgB,EAAU,SAACC,GACf,IAAMC,EAAKD,EAAEE,cAAcD,GAC3BH,EAAWK,aAAaF,IAW1B,OF4EK,SAAkBZ,GACvB,IAAMN,EAAO,GACb,GAAIM,EAAOT,EACT,IAAK,IAAIwB,EAAQ,EAAGA,EAAQ,GAAIA,IAC9BrB,EAAKqB,GAASA,EAAQ,OAGxB,IAAK,IAAIA,EAAQ,EAAGA,EAAQhC,EAAciC,WAAa,EAAGD,IACxDrB,EAAKqB,GAASA,EAAQ,EAG1B,OAAOrB,EEhGPsB,CAASP,EAAWQ,UAAUC,KAAI,SAACjB,GACjCP,EAAKI,KACH,cAAC,IAAD,CAAMqB,GAAE,WAAMC,EAAN,YAAiBX,EAAWQ,SAA5B,YAAwChB,GAAhD,SACE,mBAAGoB,UAAU,gBAAgBT,GAAE,WAAMQ,EAAN,YAAiBX,EAAWQ,SAA5B,YAAwChB,GAASS,QAASA,EAAzF,SACGT,UAMP,cAAC,IAAD,UACGP,KAmCQ4B,EA/BC,SAACC,GAEf,MAAgCC,mBAAiBjC,GAAjD,mBAAOkC,EAAP,KAAqBC,EAArB,KACAtC,QAAQC,IAAI,WAAYoC,GAExB,IAAME,EAAc,SAACC,GACnB,IACM5B,EADe4B,EAAMC,OACFjB,GACzBc,EAAQI,OAAOC,SAAS/B,KAG1B,OAEE,qBAAKqB,UAAU,UAAf,SAEIE,EAAWS,MAAMd,KAAI,SAAClB,GACpB,OACE,iCACE,oBAAGqB,UAAU,eAAeT,GAAIZ,EAAKiC,WAAYvB,QAASiB,EAA1D,cAAyE3B,KACzE,qBAAKqB,UAAU,gBAAf,SACGrB,GAAQyB,GAAgB,cAAC,EAAD,CAAWR,SAAUjB,EAAMc,aAAcS,EAAWT,0B,wCDF7F,SAASoB,EAAQC,GACb,OAASA,GAAsB,IAAfA,EAAIC,OAExB,SAASC,EAAqBC,GAC1B,IAAK,IAAIvB,EAAQ,EAAGA,EAAQuB,EAAKF,OAAQrB,IAAS,CAE9C,GAAGmB,EADaI,EAAKvB,IAEjB,OAAO,EAGf,OAAO,EAEJ,SAASwB,EAAiBC,GAC7BpD,QAAQC,IAAI,WAAYmD,GACxB,IAAIC,EAAM,IAAIC,IAkDd,OAhDIR,EAAQM,EAAYG,kBAA0D,IAAtCH,EAAYG,gBAAgBP,OACpEK,EAAIG,IAAI,4DAERJ,EAAYG,gBAAgBE,QAAO,SAACC,EAAO/B,GACvCmB,EAAQY,MACT5B,KAAI,SAAC6B,GAASN,EAAIG,IAAI,+DAEzBV,EAAQM,EAAYQ,kBACpBP,EAAIG,IAAI,uDAERJ,EAAYQ,iBAAiBH,QAAO,SAACI,EAAYlC,GAC7CmB,EAAQe,EAAWC,QAAUhB,EAAQe,EAAWE,QAAUjB,EAAQe,EAAWG,OAASlB,EAAQe,EAAWI,QAC1GnC,KAAI,SAAC6B,GAASN,EAAIG,IAAI,0DAEzBV,EAAQM,EAAYc,aACpBb,EAAIG,IAAI,0CAGRV,EAAQM,EAAYtC,OAASuC,EAAIG,IAAI,6BAErCV,EAAQM,EAAYe,WACpBd,EAAIG,IAAI,6BAERJ,EAAYe,UAAUV,QAAO,SAACW,EAAGzC,GAC7BmB,EAAQsB,EAAEC,IAAMvB,EAAQsB,EAAEA,MAC3BtC,KAAI,SAAC6B,GAASN,EAAIG,IAAI,gCAEzBV,EAAQM,EAAYkB,WACpBjB,EAAIG,IAAI,uDAERJ,EAAYkB,UAAUb,QAAO,SAACc,EAAM5C,GAChCmB,EAAQyB,EAAKT,QAAUhB,EAAQyB,EAAKC,SACrC1C,KAAI,SAAC6B,GAASN,EAAIG,IAAI,0DAGzBP,EAAqB,CAACG,EAAYqB,OAAOC,MAAMC,OAAQvB,EAAYqB,OAAOC,MAAME,MAAOxB,EAAYqB,OAAOC,MAAMG,SAChHxB,EAAIG,IAAI,0CAERP,EAAqB,CAACG,EAAYqB,OAAOK,QAAQD,MAAOzB,EAAYqB,OAAOK,QAAQF,SACnFvB,EAAIG,IAAI,0CAERP,EAAqB,CAACG,EAAYqB,OAAOM,gBAAgBH,MAAOxB,EAAYqB,OAAOM,gBAAgBF,SACnGxB,EAAIG,IAAI,gDAERP,EAAqB,CAACG,EAAYqB,OAAOO,gBAAgBJ,MAAOxB,EAAYqB,OAAOO,gBAAgBH,SACnGxB,EAAIG,IAAI,gDAEZxD,QAAQC,IAAI,6BAAUoD,GACfA,G,SAeClC,O,mBAAAA,I,iBAAAA,I,iBAAAA,I,kBAAAA,M,KAQmB8D,MEjH/B,IAEaC,EAAkB,SAACC,GAE5B,OADAnF,QAAQC,IAAI,MAAOkF,EAAcC,WAC7BD,EAAcE,WAAaF,EAAcG,aAErC,qBAAKrD,UAAU,WAAf,SACI,qBAAKA,UAAU,QAAf,SACKkD,EAAcE,aAMvB,sBAAKpD,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAQT,GAAG,aAA1B,UAEK2D,EAAcvE,KAFnB,UAE2BuE,EAActE,MAFzC,YAKIsE,EAAcG,aAAcxD,KAAI,SAACyD,EAAS5D,GAAV,OAE5B,gCAGQ,cAAC,IAAD,UACI,cAAC,IAAD,CAAMM,UAAU,aAAaF,GAAE,WAAMC,EAAN,YAAiBmD,EAAcvE,KAA/B,YAAuCuE,EAActE,MAArD,YAA8D0E,EAAQzE,MAArG,SAEI,wBAAQmB,UAAU,eAAeX,QAAS,kBAAM6D,EAAcK,iBAAiBtF,K,UAAWqF,IAA1F,mBAAwGA,EAAQzE,KAAhH,wDAAmK,GAAlCqC,EAAiBoC,GAASE,KAAY,iBAAS,8BAI5L,cAAC,EAAD,CACI7B,iBAAkB2B,EAAQ3B,iBAC1BO,UAAWoB,EAAQpB,UACnBM,OAAQc,EAAQd,OAChBlB,gBAAiBgC,EAAQhC,gBACzBzC,KAAMyE,EAAQzE,KAAMoD,WAAYqB,EAAQrB,WACxCsB,iBAAkBL,EAAcK,iBAChC3E,MAAO8B,SAASwC,EAActE,OAC9B6E,KAAM/C,SAASwC,EAAcvE,MAAO0D,UAAWiB,EAAQjB,kBAKvE,uBAAM,2BAMhBqB,EAAc,SAACvC,GACjB,IAAMwC,EACF,qBAAK3D,UAAU,kBAAf,SACKmB,EAAYQ,iBAAiB9B,KAAI,SAAC+D,GAAD,OAC9B,sBAAK5D,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,SAA8B4D,EAAM/B,QACpC,8BAAM+B,EAAM7B,eAMtBG,EACF,sBAAKlC,UAAU,YAAf,UACI,uBADJ,IACW,kDAAiB,uBAEpBmB,EAAYe,UAAUrC,KAAI,SAAC4B,EAAO/B,GAAR,OACtB,gCACI,iCAAOA,EAAQ,EAAf,KAAoB+B,EAAMU,KAD9B,IACwC,uBACpC,uCAAUV,EAAMW,cAe9BI,GANMrB,EAAYG,gBAAgBzB,KAAI,SAAC4B,GAAD,OAC5B,uBAAMzB,UAAU,aAAhB,UAA8ByB,EAA9B,UAMZ,sBAAKzB,UAAU,mBAAf,UACI,uBAAM,iDACN,uBAFJ,gDAEoB,sBAAKA,UAAU,SAAf,eAA2BmB,EAAYqB,OAAOK,QAAQF,MAAM,uBAAM3C,UAAU,UAAhB,cAA4BmB,EAAYqB,OAAOK,QAAQD,MAAvD,WAC5E,uBAHJ,gDAGoB,sBAAK5C,UAAU,SAAf,eAA2BmB,EAAYqB,OAAOM,gBAAgBH,MAAM,uBAAM3C,UAAU,UAAhB,eAA6BmB,EAAYqB,OAAOM,gBAAgBF,MAAhE,WACpF,uBAJJ,gDAIoB,sBAAK5C,UAAU,SAAf,eAA2BmB,EAAYqB,OAAOO,gBAAgBJ,MAAM,uBAAM3C,UAAU,UAAhB,eAA6BmB,EAAYqB,OAAOO,gBAAgBH,MAAhE,UACpF,uBALJ,wCAKsB,sBAAK5C,UAAU,SAAf,eAA2BmB,EAAYqB,OAAOC,MAAME,MAAM,uBAAM3C,UAAU,UAAhB,eAA6BmB,EAAYqB,OAAOC,MAAMG,MAAtD,cAKpF,OACI,sBAAK5C,UAAU,QAAf,UACI,uBACA,sBAAKT,GAAG,OAAR,eAAkB4B,EAAYtC,KAA9B,iBAAwCsC,EAAYc,WAApD,OAAsE,uBACrE0B,EACAzB,EACAM,M,yBCnIe,IAAIqB,OAAO,cAAe,KAA/C,ICDKC,EDOCC,EAAU,CACnB,qBACA,eACA,eACA,gBAESC,EAAa,CAAC,4BAAS,4BAAS,4BAAS,4BAAS,mCAQlDC,EAAe,WACxB,IAAMC,EAAI,IAAItG,KAKd,OAJAsG,EAAE3F,YAPmB,MAQrB2F,EAAEC,SANoB,GAOtBD,EAAErG,QANmB,GAOrBqG,EAAEE,SAAS,GACJF,GAwDEG,EAAc,SAACC,GACxB,IAAIC,EAAYN,IACZO,GAAOF,EAAWG,UAAYF,EAAUE,WAAlC,OACNC,EAAQC,KAAKC,KAAKJ,GAKtB,OAJAzG,QAAQC,IAAI,kBAAmBwG,GAE/BzG,QAAQC,IAAI,eAAgB0G,EAAO,eAAgBJ,EAAY,cAAeC,GAEvEG,I,SC3FCZ,O,kCAAAA,I,8BAAAA,I,0BAAAA,I,qBAAAA,M,eCICe,EAMX,WAAYC,EAAYnH,EAAYoH,EAAgBC,GAAc,yBALlEF,QAKiE,OAJjEnH,UAIiE,OAHjEoH,YAGiE,OAFjEC,SAEiE,OADjEC,gBACiE,EAC/DC,KAAKJ,GAAKA,EACVI,KAAKvH,KAAOA,EACZuH,KAAKH,OAASA,EACdG,KAAKF,IAAMA,EACXE,KAAKD,WACHC,KAAKvH,KAAKQ,cACV,YACC+G,KAAKvH,KAAKgC,WAAa,GACxB,WACAuF,KAAKvH,KAAKG,UACV,WACAkG,EAAWkB,KAAKH,SCNTI,G,0CAAiB,SAACC,GAC3B,OACI,sBAAKpF,UAAU,cAAf,UACI,qBAAKA,UAAU,mBAAf,SAJO,8CAKP,sBAAKA,UAAU,qBAAf,UAAqCoF,EAAKJ,IAA1C,iBAAmDI,EAAKN,GAAxD,aACA,qBAAK9E,UAAU,2BACf,qBAAKA,UAAU,wBAAf,SAAwCoF,EAAKC,YAC7C,qBAAKrF,UAAU,sBAAf,kCAKCsF,EAAa,SAACC,GAEvB,OACI,sBAAKvF,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,oBAAqC,sBAAMA,UAAU,KAAhB,SAAsBuF,EAAOT,KAAlE,aACA,qBAAK9E,UAAU,oBAAf,uDACA,sBAAKA,UAAU,oBAAf,UAAmC,sBAAMA,UAAU,KAAhB,SAAsBuF,EAAOP,MAAhE,aACA,qBAAKhF,UAAU,uBAAf,SAAuCuF,EAAON,aAC9C,qBAAKjF,UAAU,oBAAf,uCACA,qBAAKA,UAAU,oBAAf,mBC7BL,SAASwF,EAAYC,GAIxB,IAHA,IAAIC,EAAM,EACN5E,EAAM2E,EACNE,EAAyB,KAChB,CACT,GAAID,EAAM,GAAI,CACV3H,QAAQ6H,MAAM,uBACd,MAEJ,IAAIC,EAAW/E,EAAIgF,QAAQ,KACvBC,EAAajF,EAAIgF,QAAQ,KAG7B,IAAiB,GAAbD,EAAgB,MACpB,IAAIG,EAAMH,EAAWE,EAAa,EAClChI,QAAQC,IAAIgI,GACZ,IAAIC,EAAK,sBAAMjG,UAAU,KAAhB,SAAsBc,EAAIoF,UAAUH,EAAa,EAAGF,KAC7DF,EAAQlH,KAAKwH,GACbnF,EAAMA,EAAIoF,UAAU,EAAGH,EAAaC,GAAO,IAAMlF,EAAIoF,UAAUL,EAAW,EAAG/E,EAAIC,QAEjF2E,IAEJ,IAAIS,EAAQ,EAeZ,OAduB,mCAEfrF,EAAIsF,MAAM,IAAIvG,KAAI,SAACwG,EAAKC,GACpB,MAAW,KAAPD,GACAF,IACApI,QAAQC,IAAI,MAAQmI,GAEbR,EAAQQ,EAAQ,IACb,mCAAGE,SAU1B,IC+FFE,ED/FQC,EAAW,SAACC,GACrB,IAAIC,EAAaD,EAAa/G,OAASR,EAAMyH,MAEvCC,EAAOH,EAAavE,UAAUnB,OAC9B8F,EAAgB,SAACzB,GACnB,IAAM/G,EAAOoI,EAAavE,UAAUrC,KAAI,SAACqC,GACrC,OAAIkD,EAAK1F,OAASR,EAAM4H,MACb5E,EAAUC,EAAE4E,WAAW,gBAAiB,IAExCvB,EAAYtD,EAAUC,MAIjC6E,EAAUP,EAAavE,UAE3B,OACI,qCACI,sBAAKlC,UAAU,iBAAf,mBAAsC,sBAAKA,UAAU,YAAf,gBAA+B4G,EAAO,GAAKvI,EAAK,MAAS,sBAAK2B,UAAW0G,EAAa,gBAAkB,WAA/C,cAA8DA,EAAa,KAAOM,EAAQ,GAAG5E,EAAI,SAChM,sBAAKpC,UAAU,iBAAf,mBAAsC,sBAAKA,UAAU,YAAf,gBAA+B4G,EAAO,GAAKvI,EAAK,MAAS,sBAAK2B,UAAW0G,EAAa,gBAAkB,WAA/C,cAA8DA,EAAa,KAAOM,EAAQ,GAAG5E,EAAI,UAEtL,GAARwE,GAAcA,EAAO,GAA2B,GAAtBH,EAAa/G,QAAgB,sBAAKM,UAAU,iBAAf,UAAgC,sBAAKA,UAAU,YAAf,gBAA+B4G,EAAO,GAAKvI,EAAK,MAAS,qBAAK2B,UAAW0G,EAAa,gBAAkB,WAA/C,SAA6DA,EAAa,KAAOM,EAAQ,GAAG5E,EAAI,KAAzL,WAM/D6E,GAFmBR,EAAanF,gBAAgB4F,WAAU,SAACC,EAAGC,GAAJ,OAAUD,EAAEpG,OAAS,KAE5D,SAACqE,GAAD,OACrB,sBAAKpF,UAAW,mCAA0CoF,EAAK1F,MAA/D,UACI,sBAAKM,UAAU,uBAAf,UACI,sBAAKA,UAAU,uBAAf,UAAsC,sBAAMA,UAAU,KAAhB,sCAAtC,yBAEA,sBAAKA,UAAU,uBAAf,cAAwCyG,EAAanF,gBAAgB,GAArE,UAEJ,qBAAKtB,UAAU,8BAAf,SAEKyG,EAAanF,gBAAgBE,QAAO,SAAC2F,EAAGC,GAAQ,OAAY,GAALA,KAAUvH,KAAI,SAACwG,EAAK3G,GAGxE,KAAI0F,EAAK1F,OAASR,EAAMmI,OAAS3H,GAAS,IAA1C,CACA,IAAI4H,EAAKjB,EAAIkB,OAGPC,GAFQF,EAAGvG,OAEH,IAAI8C,OADH,gDAEX4D,EAAmB,6BACjBC,OAA0BC,GAAnBL,EAAGM,MAAMJ,GAMtB,OALIE,IACAD,EAAM,sBAAMzH,UAAU,qBAAhB,SAAsCsH,KAI5C5H,EAAQ,GAAK,EAAU,sBAAKM,UAAW,6BAAhB,UAA+C0H,GAAQD,GAAMC,GAAQJ,EAAIjB,EAAIkB,OAAOxG,OAAS,GAAK,uBAAlG,IAA0G,sBAAMf,UAAU,UAAhB,SAA2BqG,EAAIkB,SAAzI,QACpB,sBAAKvH,UAAW,mBAAhB,UAAqC0H,GAAQD,GAAMC,GAAQJ,EAAIjB,EAAIkB,OAAOxG,OAAS,GAAK,uBAAxF,IAAgG,sBAAMf,UAAU,UAAhB,SAA2BqG,EAAIkB,SAA/H,kBAMjBM,EAAkB,kBACpB,qCACI,sBAAK7H,UAAU,uBAAf,UAEI,sBAAKA,UAAU,qCAAf,iCAAyD,sBAAMA,UAAU,KAAhB,0CACzD,qBAAKA,UAAU,wBAAf,SACKyG,EAAajE,OAAOK,QAAQF,QAEjC,qBAAK3C,UAAU,uBAAf,SAAuCyG,EAAajE,OAAOK,QAAQD,WAEvE,sBAAK5C,UAAU,uBAAf,UACI,sBAAKA,UAAU,qCAAf,kCAA0D,sBAAMA,UAAU,KAAhB,0CAC1D,qBAAKA,UAAU,wBAAf,SAAwCyG,EAAajE,OAAOO,gBAAgBJ,QAC5E,qBAAK3C,UAAU,oBAAf,SAAoCyG,EAAajE,OAAOO,gBAAgBH,eAI9EkF,EAAkB,kBACpB,mCACI,qBAAK9H,UAAU,uBAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,0BAAf,wEACCyG,EAAajE,OAAOK,QAAQF,MAC7B,+BACI,mCAAK,qBAAK3C,UAAU,aAAf,mBACL,mCAAK,qBAAKA,UAAU,aAAf,mBACL,mCAAK,qBAAKA,UAAU,aAAf,sBAET,qBAAKA,UAAU,qBAAf,SACKyG,EAAajE,OAAOK,QAAQD,gBAM3CmF,EAAkB,kBACpB,sBAAK/H,UAAU,uBAAf,UACI,qBAAKA,UAAU,eAAf,0DAGA,qBAAKA,UAAU,wBAAf,SACKwF,EAAYiB,EAAajE,OAAOC,MAAME,SAE3C,qBAAK3C,UAAU,qCAAf,SACKyG,EAAajE,OAAOC,MAAMG,QAE/B,sBAAK5C,UAAU,6BAAf,iDAAwDyG,EAAajE,OAAOC,MAAMC,OAAlF,WAGFsF,EAAsB,SAAC5C,GACzB,OACI,sBAAKpF,UAAU,qBAAf,UACI,cAAC6G,EAAD,CAAenH,MAAO0F,EAAK1F,QAC3B,cAACmI,EAAD,IACA,cAACZ,EAAD,CAAkBvH,MAAO0F,EAAK1F,YAKpCuI,EAAsB,SAAC7C,GAAD,OACxB,sBAAKpF,UAAU,qBAAf,UACI,cAAC6G,EAAD,CAAenH,MAAO0F,EAAK1F,QAC3B,cAACoI,EAAD,IACA,cAACb,EAAD,CAAkBvH,MAAO0F,EAAK1F,YAIhCwI,EAAsB,SAAC9C,GAAD,OACxB,sBAAKpF,UAAU,qBAAf,UACI,cAAC6G,EAAD,CAAenH,MAAO0F,EAAK1F,QAC3B,cAACqI,EAAD,IACA,cAACd,EAAD,CAAkBvH,MAAO0F,EAAK1F,YAItC,OACI,sBAAKM,UAAU,eAAf,UACI,cAAC,EAAD,CACI8E,GAAI2B,EAAa0B,MACjB9C,UAAWoB,EAAaxE,WACxB+C,IAAKjB,EAAQ0C,EAAa/G,SAE9B,qBAAKM,UAAU,OAAf,0BAICyG,EAAa/G,OAASR,EAAMmI,OAAS,cAACY,EAAD,CAAqBvI,MAAOR,EAAMmI,QACvEZ,EAAa/G,OAASR,EAAMyH,OAAS,cAACqB,EAAD,CAAqBtI,MAAOR,EAAMyH,QACvEF,EAAa/G,OAASR,EAAM4H,OAAS,cAACoB,EAAD,CAAqBxI,MAAOR,EAAM4H,YE/LvEsB,G,MAAmB,SAACC,GAC7B,OAEI,sBAAKrI,UAAU,gBAAf,UACI,qBAAKA,UAAU,qBAAf,uEACA,qBAAKA,UAAU,yBAAf,0BACA,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,yBAAf,0DACA,qBAAKA,UAAU,oBAAf,SAAoCqI,EAAezF,aAalD0F,EAAkB,SAACD,GAC5B,IAAIE,EAAM,GAIJ/F,EAAS,IAAM6F,EAAe7F,OAE9BgG,EAAahG,EAAOzB,OAEpB0H,EAAgB9D,KAAKC,KAAK4D,EAAY,IACxCC,EAAgB,IAChBF,EAAM,IAOV,IALA,IAAMG,EAAW/D,KAAKgE,MAAM,GAAKF,GAE7BG,EAAmC,IAAIC,MAAM,IAC7CnD,EAAM,EACNoD,EAAY,EACP1B,EAAI,EAAGA,EAAImB,EAAKnB,IAAK,CAC1BwB,EAAMxB,GAAK,GACX,IAAI2B,GAAwB,EACxBC,GAAkB,EAClB5B,EAAIsB,GAAY,EAAGK,GAAe,EAC7B3B,EAAIsB,GAAY,EAAGM,GAAkB,EACzCD,GAAe,EAEpB,IAAK,IAAIE,EAAI,EAAGA,EAxBR,GAwBiBA,IACjBT,EAAY9C,GAAOqD,GACX,GAAL3B,GAAe,GAAL6B,GAAyB,KAAfzG,EAAOkD,IAC1BA,IAEJkD,EAAMxB,GAAG6B,GAAK,oBAAIjJ,UAAU,MAAd,SAAqBwC,EAAOkD,KAC1CA,KACO8C,EAAYM,GAAaE,GACxB,GAAL5B,GAAe,GAAL6B,GAA+B,KAArBzG,EAAOsG,IAC1BA,IAEJF,EAAMxB,GAAG6B,GAAK,oBAAIjJ,UAAU,SAAd,SAAwBwC,EAAOsG,KAC7CA,KAEAF,EAAMxB,GAAG6B,GAAK,uBAO1B,OACI,sBAAKjJ,UAAU,WAAf,UAEI,cAAC,EAAD,CAAkB4C,MAAOyF,EAAezF,MAAOJ,OAAQ6F,EAAe7F,OAAQ2F,MAAOE,EAAeF,MAAOe,WAAYb,EAAea,WAAYC,SAAS,IAE3J,sBAAKnJ,UAAU,cAAf,UACI,0CAAQqI,EAAeF,MAAvB,aAAqC,iDAAUE,EAAea,WAAzB,OAA2C,qBAAKlJ,UAAU,kBAAf,uFAEpF,uBAAOA,UAAU,eAAjB,SAEQ4I,EAAM/I,KAAI,SAACyH,GAAD,OACN,6BAEQA,EAAGzH,KAAI,SAACuJ,GACJ,OAAOA,gBDnF3C,SAASC,EAAgBC,EAAYC,EAAgBC,GACjD,IAAIC,EAAS,GACb1L,QAAQC,IAAI,gCAAiCwL,EAAeA,EAAc,IAE1E,IAAK,IAAIpC,EAAI,EAAGA,EAAImC,EAAQnC,IACxBqC,EAAOrC,GAAKA,EAEhB,OAAQ,gCACJ,gCAEQqC,EAAO5J,KAAI,SAAC4B,EAAO/B,GACf,OACI,qBAAIM,WAAoB,GAATN,EAAc,eAA2B,GAATA,GAAc,kBAA4B,GAATA,GAAc,0BAAqC,GAATA,GAAc,iBAAmB,GAA3J,UACI,oBAAIM,UAAU,IAAd,UAA8B,GAATN,GAAuB,GAATA,SAAoCiI,GAApB6B,EAAc,IAAsBA,EAAc,GAAsB3H,QAE3H,oBAAI7B,UAAU,IAAd,UAA8B,GAATN,GAAuB,GAATA,SAAoCiI,GAApB6B,EAAc,IAAsBA,EAAc,GAAsB3H,QAC3H,8BAAgB,GAATnC,GAAuB,GAATA,SAAoCiI,GAApB6B,EAAc,IAAsBA,EAAc,GAAsB3H,QAC7G,8BAAgB,GAATnC,GAAuB,GAATA,SAAoCiI,GAApB6B,EAAc,IAAsBA,EAAc,GAAsB3H,kBAUlI,SAAS6H,EAAeJ,EAAYE,EAA6CG,GACpF,IAAIJ,EAAS,EAcb,OAbID,GAAOpK,EAAMmI,QACbkC,EAAS,GAaT,sBAAKvJ,UAAU,eAAf,UACI,sBAAMA,UAAU,cAAhB,SACKqJ,EAAgBC,EAAKC,EAAQC,KAElC,sBAAMxJ,UAAU,eAAhB,SACKqJ,EAAgBC,EAAKC,EAAQC,QAMvC,SAASI,EAAkBC,GAC9B,IAAIC,EAAWvD,EAAewD,OAE9B,OADaF,EAAQ9I,QAEjB,KAAK,EAGG+I,EAD2B,GAA3BD,EAAQ,GAAGhI,MAAMd,OACNwF,EAAeyD,MAEfzD,EAAe0D,MAC9B,MACJ,KAAK,EACD,IAAIC,EAAWL,EAAQ,GAAGhI,MAAMd,OAC5BoJ,EAAWN,EAAQ,GAAGhI,MAAMd,OAChB,GAAZmJ,GAA6B,GAAZC,EACjBL,EAAWvD,EAAe6D,OACT,GAAZF,GAA6B,GAAZC,EACtBL,EAAWvD,EAAe8D,OACR,GAAZH,GAA6B,GAAZC,IACvBL,EAAWvD,EAAe+D,QAG9B,MACJ,KAAK,EACDR,EAAWvD,EAAegE,QAC1BV,EAAQW,SAAQ,SAAClI,EAAM5C,GACnB,IAAI+K,EAAWnI,EAAKT,MAAMd,OACV,GAAZ0J,GAA0B,GAAT/K,EACjBoK,EAAWvD,EAAemE,QACP,GAAZD,GAA0B,GAAT/K,IACxBoK,EAAWvD,EAAeoE,YAGlC,MACJ,KAAK,EACDb,EAAWvD,EAAeqE,SAGlC,OAAOd,EA4EJ,SAASe,EAAmBhB,GAE/B,IAAIiB,EAAiBlB,EAAkBC,GACnCkB,EAAgB,mCAEpB,OAAQD,GACJ,KAAKvE,EAAeoE,QAChBI,GAAiB,kCACjB,MAEJ,KAAKxE,EAAemE,QAChBK,GAAiB,kCACjB,MAEJ,KAAKxE,EAAeqE,SAChBG,GAAiB,+BAUzB,OALID,GAAkBvE,EAAeoE,QACpB,EACNG,GAAkBvE,EAAemE,SAC3B,EAGb,sBAAK1K,UAAW+K,EAAhB,UAGQlB,EAAQhK,KAAI,SAACyC,EAAM8E,GACf,OAxGb,SAA4B9E,EAAY5C,EAAeoL,GAE1D,IAAIE,EAAkBF,GAAkBvE,EAAeoE,SAAoB,GAATjL,GAAgBoL,GAAkBvE,EAAemE,SAAoB,GAAThL,EAE9H3B,QAAQC,IAAI,qBAAsB8M,GAGlC,IAAIG,GAAiB,EAerB,OAbe,GADD3I,EAAKT,MAAMd,SAER,GAATrB,GAAcoL,GAAkBvE,EAAemE,SAAWI,GAAkBvE,EAAe6D,QAAUU,GAAkBvE,EAAe+D,QAEtH,GAAT5K,GAEAoL,GAAkBvE,EAAemE,SAAoB,GAAThL,KAHnDuL,GAAiB,GAYrB,qCACI,sBAAKjL,UAAS,uBAAd,UACKsC,EAAKT,MAAMuE,MAAM,IAAI5E,QAAO,SAAC2F,GAAD,MAAY,IAALA,KAAStH,KAAI,SAACgC,EAAOoH,GAAR,OAC7C,mCACI,sBAAKjJ,UAAWiL,EAAiB,wCAA0C,kBAA3E,UACI,qBAAKjL,UAAU,aAAf,SAA6B6B,IAC7B,sBAAK7B,UAAU,uBAAf,UACI,qBAAKA,UAAU,gBAAf,SAA+B,2CAC/B,qBAAKA,UAAU,iBAAf,SAAgC,2CAChC,qBAAKA,UAAU,kBAAf,oBACA,qBAAKA,UAAU,oBAAf,+BAKhB,qBAAKA,UAAW,uBAInBgL,EAAiB,qBAAKhL,UAAU,qBAA4B,gCA8D9CkL,CAAmB5I,EAAM8E,EAAG0D,MAI1CA,GAAkBvE,EAAeyD,OAAS,sBAAKhK,UAAU,sBAAf,UAAsC6J,EAAQ,GAAGhI,MAAM,uBAAOgI,EAAQ,GAAGhI,a,SA9D3H0E,O,mBAAAA,I,mBAAAA,I,mBAAAA,I,qBAAAA,I,qBAAAA,I,qBAAAA,I,mBAAAA,I,uBAAAA,I,iBAAAA,I,kBAAAA,M,KElIE,IAAM4E,EAAsB,SAACrK,GAChC,IACI,IAAMzC,EAAOyC,EAAIsF,MAAM,KAAKvG,KAAI,SAACyH,EAAIF,GACjC,OAAS,GAALA,EAAe,IAAME,EAClBA,KAGX,OACI,qCACI,sBAAMtH,UAAU,YAAhB,SAA6B3B,EAAK,KAAU,uBAC5C,sBAAM2B,UAAU,YAAhB,SAA6B3B,EAAK,QAG5C,MAAOuH,GAEL,OADA7H,QAAQ6H,MAAMA,GACP,2EAUR,SAASwF,EAAUvB,GAGtB,IAAIwB,EAOAC,EANJ,IACID,EAAUxB,EAAQrI,QAAO,SAAC2F,EAAGC,GAAQ,YAAkBO,GAAXR,EAAEtF,SAAsBd,OAEtE,MAAO6E,GACL,OAAO,4DAGX,GAAe,GAAXyF,EACAC,EAAQ,sBAAKtL,UAAU,cAAf,UACJ,qBAAKA,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGhI,QACnD,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,eAEpD,GAAe,GAAX8I,EAAc,CACrB,IAAIE,EAAW1B,EAAQ,GAAGhI,MAAMd,OAC5ByK,EAAW3B,EAAQ,GAAGhI,MAAMd,OAChCuK,EAAQ,sBAAKtL,UAAU,cAAf,UACJ,qBAAKA,UAAWuL,EAAW,EAAI,oCAAsC,wBAArE,SAA+F1B,EAAQ,GAAGhI,QAC1G,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,OACnD,qBAAKvC,UAAWwL,EAAW,EAAI,oCAAsC,wBAArE,SAA+F3B,EAAQ,GAAGhI,QAC1G,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,eAEpD,GAAe,GAAX8I,EAAc,CACrBtN,QAAQC,IAAI6L,GACZ,IAAI4B,EAAa5B,EAAQ,GAAGhI,MAAMd,OAC9B2K,EAAa7B,EAAQ,GAAGhI,MAAMd,OAC9B4K,EAAa9B,EAAQ,GAAGhI,MAAMd,OAElCuK,EACI,sBAAKtL,UAAU,cAAf,UACI,qBAAKA,UAAyB,GAAdyL,EAAkB,oCAAsC,wBAAxE,SAAkG5B,EAAQ,GAAGhI,QAC7G,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,OACnD,qBAAKvC,UAAyB,GAAd0L,EAAkB,oCAAsC,wBAAxE,SAAkG7B,EAAQ,GAAGhI,QAC7G,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,OACnD,qBAAKvC,UAAyB,GAAd2L,EAAkB,oCAAsC,wBAAxE,SAAkG9B,EAAQ,GAAGhI,QAC7G,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,eAG3D+I,EADkB,GAAXD,EACC,sBAAKrL,UAAU,cAAf,UACJ,qBAAKA,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGhI,QACnD,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,OACnD,qBAAKvC,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGhI,QACnD,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,OACnD,qBAAKvC,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGhI,QACnD,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,OACnD,qBAAKvC,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGhI,QACnD,qBAAK7B,UAAU,wBAAf,SAAwC6J,EAAQ,GAAGtH,UAG/C,wBAEZ,OAAO+I,EAEJ,SAASM,EAAWC,GACvB,IAAIC,EAAYC,EAAKC,OAAOC,OAAO,GAAIJ,IAGvC,OAFA9N,QAAQC,IAAI,eAAgB8N,EAAWD,GAGnC,qBAAK7L,UAAU,eAAf,SAGQ,CAAC,EAAG,EAAG,EAAG,GAAGH,KAAI,SAACqM,EAAGxM,GAGjB,GAAwB,MAApBoM,EAAUpM,GAAgB,CAC1B,IAAI4H,EAAKwE,EAAUpM,GACnB3B,QAAQC,IAAI,QAAUsJ,EAAGzF,MAAQ,WAAanC,GAE9C,IAAMyM,EAAU7E,EAAG8E,UAAUrL,OACvBsL,EAAU/E,EAAGxF,MACnB,OACI,sBAAK9B,UAAW,SAAWN,EAA3B,UACI,sBAAKM,UAAU,iBAAf,UAAiCsH,EAAGzF,MAAM,sBAAM7B,UAAU,kBAAhB,SAAmCqM,OAC7E,qBAAKrM,UAAU,gBAAf,SAA+B,qBAAKA,UAAU,oBAAf,SAAoCsH,EAAGvF,SACtE,sBAAK/B,UAAU,eAAf,UAA8B,sBAAMA,UAAU,cAAoBmL,EAAoB7D,EAAGtF,KAAzF,OACA,qBAAKhC,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,YAAf,SAA4BmM,EAAU,GAAK,qBAAKG,IAAKhF,EAAG8E,UAAU,OAClE,qBAAKpM,UAAU,aAAf,SAA6BmM,EAAU,IAAM,qBAAKG,IAAKhF,EAAG8E,UAAU,QACpE,qBAAKpM,UAAU,aAAf,SAA6BmM,EAAU,IAAM,qBAAKG,IAAKhF,EAAG8E,UAAU,WAI5E,OACI,sBAAKpM,UAAW,SAAWN,EAA3B,UACI,qBAAKM,UAAU,gBACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,YAAf,eACA,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,uBAWxC,IAAMuM,EAAY,SAACC,GACtBzO,QAAQC,IAAIwO,EAAW/I,KAAM+I,EAAW5N,MAAO4N,EAAW3N,MAE1D,IAAMyF,EPtGa,SAAC3F,EAAcC,EAAeC,GACjD,IAAMqF,EAAI,IAAItG,KACdsG,EAAE3F,YAAYI,GACduF,EAAEC,SAASvF,EAAQ,EAAG,GACtBsF,EAAEE,SAAS,GAMX,IAAIqI,EAAUvI,EAAEwI,SAGhB,GAFA3O,QAAQC,IAAI,iBAAkBkG,GAC9BnG,QAAQC,IAAI,QAASkG,EAAEyI,iBAAkB,UAAWzI,EAAE0I,cAAe,QAAS1I,EAAE2I,cACjE,GAAXJ,EAAc,CACd,IAAIK,EAAwB,GAAZjO,EAAO,GACvBqF,EAAErG,QAAQ,EAAIiP,OACX,CACH,IAAIC,EAAgC,EAAIN,EACpCK,EAAwB,GAAZjO,EAAO,GACvBqF,EAAErG,QAAQ,EAAIkP,EAAgCD,GAElD,OAAO5I,EOiFYpG,CAAQ0O,EAAW/I,KAAM+I,EAAW5N,MAAO4N,EAAW3N,MAEzEd,QAAQC,IAAI,WAAYsG,GAExB,IArImBI,EAqIbsI,EAAW3I,EAAYC,GACvB2I,GAtIavI,EAsIWsI,EAtIiB,CAC9ClJ,EAAKoJ,aAAexI,EACpBZ,EAAKqJ,WAAazI,EAClBZ,EAAKsJ,SAAW1I,EAChBZ,EAAKuJ,MAAQ3I,IAmIR4I,EAAiCL,EAAQpN,KAAsB,SAACiF,EAAIpF,GACtE,OAAO,IAAImF,EAAiBC,EAAIR,EP5If,SAACA,GACtB,IAAMiJ,EAAY,IAAI3P,KAEtB2P,EAAUhP,YAAY+F,EAAWnG,eACjCoP,EAAUpJ,SAASG,EAAW3E,WAAY,GAC1C5B,QAAQC,IAAI,aAAeuP,GAC3BxP,QAAQC,IAAI,YAAcsG,GAO1B,IAAIkJ,EAAgB,EACK,GAAtBD,EAAUb,WACT3O,QAAQC,IAAI,SACZwP,GAAiB,GAQrB,IAAI9I,EAAQC,KAAK8I,OACZnJ,EAAWG,UAAY8I,EAAU9I,WAAlC,QACA+I,EAGJ,OAFAzP,QAAQC,IAAI,SAAU0G,GAEfA,EO+GyCgJ,CAAUpJ,GAAaP,EAAQrE,OAE/E3B,QAAQC,IAAI,aAAcsP,GAE1B,IAAMK,EAA6BL,EAAWzN,KAAiB,SAAC+N,GAC5D,OAAO,cAAC,EAAD,CAAY9I,GAAI8I,EAAW9I,GAAInH,KAAMiQ,EAAWjQ,KAAMoH,OAAQ6I,EAAW7I,OAAQC,IAAK4I,EAAW5I,IAAKC,WAAY2I,EAAW3I,gBAOxIlH,QAAQC,IAAI,kBAAmBwO,EAAW7K,kBAS1C,IAPA,IAAIkM,EA+HR,SAA8BxL,EAAmBV,GAC7BiI,EAAkBvH,GAAlC,IAEIyL,EA5DR,SAA8BzL,GAC1B,IAAI0L,EAAU,EAAC,GAAM,GAAM,GAAM,GAC7BC,EAAe3L,EAAUtB,OACzBkN,EAAgB,EACpB,GAAoB,GAAhBD,EAAmB,CAEnB,OADmB3L,EAAU,GAAGR,MAAMd,QAElC,KAAK,EACD,MAAO,EAAC,GAAM,GAAM,GAAM,GAC9B,KAAK,EACD,OAAOgN,EACX,QACI,MAAM,IAAI/K,MAAM,2HAGrB,GAAoB,GAAhBgL,EAAmB,CAC1B,IAAIE,EAAe7L,EAAU,GAAGR,MAAMd,OAEtC,GADAkN,EAAgB5L,EAAU,GAAGR,MAAMd,OACf,GAAhBmN,GAAsC,GAAjBD,GAA0C,GAApB5L,EAAUtB,OACrD,MAAO,EAAC,GAAM,GAAO,GAAM,GACxB,GAAoB,GAAhBmN,GAAsC,GAAjBD,EAC5B,MAAO,EAAC,GAAM,GAAO,GAAM,GACxB,GAAoB,GAAhBC,GAAsC,GAAjBD,EAC5B,OAAOF,EACJ,GAAoB,GAAhBG,GAAsC,GAAjBD,EAC5B,OAAOF,EACJ,GAAoB,GAAhBG,GAAsC,GAAjBD,EAC5B,MAAO,EAAC,GAAM,GAAM,GAAO,GACxB,GAAoB,GAAhBC,GAAsC,GAAjBD,EAC5B,OAAOF,EAMK,GAAhBC,IACAC,EAAgB5L,EAAU,GAAGR,MAAMd,QAEvC,IAAImN,EAAe7L,EAAU,GAAGR,MAAMd,OACtC,GAAoB,GAAhBmN,EAAmB,OAAOH,EAC9B,GAAoB,GAAhBG,GAAqC,GAAhBF,EACrB,OAAQC,GACJ,KAAK,EACD,MAAO,EAAC,GAAM,GAAO,GAAM,GAE/B,KAAK,EACD,MAAO,EAAC,GAAM,GAAO,GAAM,GAC/B,KAAK,EACD,OAAOF,EAKnB,OAAOA,EAOUI,CAAqB9L,GAClC3C,EAAQ,EACRrB,EAAOyP,EAAWjO,KAAI,SAACuO,EAAUhH,GACjC,OAAIgH,EACOzM,EAAiBjC,KAEjB,QAIXiC,EAAiB,GAAGE,MAAMd,OAO9B,IAAIsN,EAAOhQ,EAAK,GAGhB,OAFAA,EAAK,GAAKA,EAAK,GACfA,EAAK,GAAKgQ,EACHhQ,EAtJiBiQ,CAAqB9B,EAAWnK,UAAWmK,EAAW7K,kBAE1E4M,EAAkBxC,EAAK8B,GAIrBW,EAAqB,GAClB9O,EAAQ,EAAGA,EAAQ,EAAGA,IAC3B8O,EAAS/P,KAAKiB,GAKlB,IAAI+O,EAAe,CACfvP,EAAMwP,OAAQxP,EAAMmI,MAAOnI,EAAMyH,MAAOzH,EAAM4H,OAElD,OACI,8BAEK2H,EAAa5O,KAAI,SAACH,GA2Cf,OAzCIA,GAASR,EAAMwP,OAEX,gCACI,qBAAK1O,UAAU,KAAf,SACI,cAAC,EAAD,CACI4C,MAAO4J,EAAWhK,OAAOK,QAAQD,MACjCJ,OAAQgK,EAAWhK,OAAOK,QAAQF,MAClCwF,MAAOmF,EAAW,GAAGxI,GAAIoE,WAAYoE,EAAW,GAAGrI,WAAYkE,SAAS,MAEhF,qBAAKnJ,UAAU,KAAf,SACI,cAAC,EAAD,CACI4C,MAAO4J,EAAWhK,OAAOK,QAAQD,MACjCJ,OAAQgK,EAAWhK,OAAOK,QAAQF,MAClCwF,MAAOmF,EAAW,GAAGxI,GAAIoE,WAAYoE,EAAW,GAAGrI,WAAYkE,SAAS,SAKpF,gCACI,sBAAKnJ,UAAU,KAAf,UAEK2N,EAAYjO,GACZ0L,EAAUoB,EAAWnK,WACrB3C,GAASR,EAAMmI,OAASwD,EAAmB2B,EAAWnK,WAEtDuJ,EAAW2C,GACX7E,EAAehK,EAAOmO,EAAmBrB,EAAWnK,cAEzD,qBAAKrC,UAAU,KAAf,SACI,cAAC,EAAD,CAAUiC,WAAYuK,EAAWvK,WAC7BC,UAAWsK,EAAWtK,UACtBM,OAAQgK,EAAWhK,OACnBlB,gBAAiBkL,EAAWlL,gBAC5BzC,KAAM2N,EAAW3N,KACjBD,MAAO4N,EAAW5N,MAClB6E,KAAM+I,EAAW/I,KAAM/D,MAAOA,EAAOyI,MAAO8E,EAAQvN,gBAkGxF,SAASqM,EAAKD,GACV,IAAIzN,EAAOyN,EACPuC,EAAOhQ,EAAK,GAGhB,OAFAA,EAAK,GAAKA,EAAK,GACfA,EAAK,GAAKgQ,EACHhQ,ECpUJ,IAAM0B,EAAU,gBACjB4O,EAAwB,IAAMzQ,EAAU,KAAOR,EAAciC,WAAa,GA8KjEiP,OA3Kf,SAAaC,GACX,IAMIvD,EANE3H,EAAYvF,IAClBL,QAAQC,IAAI2F,GAEZmL,qBAAU,WACRC,EAAcF,EAAUG,QACvB,CAACH,EAAUG,OAEd,IASIC,EAPJ,EAAkC9O,mBAAiBwO,GAAnD,mBAAOO,EAAP,KAAiBH,EAAjB,KACA,EAAyC5O,mBAA+B,MAAxE,mBAAOgB,EAAP,KAAoBgO,EAApB,KACA,EAAmChP,mBAAwB,MAA3D,mBAAOiD,EAAP,KAAiBgM,EAAjB,KACA,EAAuDjP,mBAA6B,MAApF,mBAAOkP,EAAP,KAA6BC,EAA7B,KACA,EAA+DnP,mBAA6B,MAA5F,mBAAOoP,EAAP,KAAiCC,EAAjC,KAEA,EAA6CrP,mBAAiB,IAA9D,mBAAsBsP,GAAtB,WAIER,EAD8B,KAA5BS,OAAOC,SAASV,UAAmBS,OAAOC,SAASV,UAAY,IAAMlP,EAAU,IACtE,IAAMA,EAAU4O,EAEhBe,OAAOC,SAASV,SAG7BlR,QAAQC,IAAI,WAAYN,GAGxBK,QAAQC,IAAI,WAAYiR,GAExB,IAAI,EAAgCA,EAAS7I,MAAM,KAAK5E,QAAO,SAAA2F,GAAC,MAAS,IAALA,IAAYA,EAAEyI,SAAS7P,MAA3F,mBAAKpB,EAAL,KAAWC,EAAX,KAAkBC,EAAlB,KACA,QAAY8I,GAARhJ,EAAmB,CAAC,IAAD,EACLgQ,EAAcvI,MAAM,KAAK5E,QAAO,SAAA2F,GAAC,MAAS,IAALA,KADhC,mBACpBxI,EADoB,KACdC,EADc,KAGvBb,QAAQC,IAAI,iBAAkBW,EAAMC,EAAOC,GACtCA,GACyB,MAAxBwQ,GACFC,EAAuB,MAG3B,MAAuCnP,mBAA0B,MAAjE,mBAAO0P,EAAP,KAAmBC,EAAnB,KAmEA,GAlEAhB,qBAAU,YC5DL,SAAsBnQ,GAezB,OAbIoR,IACI,CACIC,OAAQ,MACRC,QAAS,8DACTC,IAAI,GAAD,OAAKvR,EAAL,WAETvB,MAAK,SAAC+S,GAEJ,OAD2BA,EAAIC,QAEhCC,OAAM,SAACzK,GAEN,OADA7H,QAAQ6H,MAAM,eAAgBA,GACvB,SDgDf0K,CAAa3R,GAAMvB,MAAK,SAACmT,GAGvB,GAFAxS,QAAQC,IAAI,oBAAqBuS,IAE5BA,EAAU,OAAQ,4CACvBT,EAAiBS,EAASC,kBAE3B,CAACvB,IAEJH,qBAAU,WACHjQ,GAMHd,QAAQC,IAAI,WAAYuR,EAA0B,KAClDD,EAAuBC,KANvBxR,QAAQC,IAAI,YAEZsR,EAAuB,SAMxB,CAACzQ,IAEJiQ,qBAAU,WAIR,GAHA/Q,QAAQC,IAAI,aAAc6R,GAC1B9R,QAAQC,IAAI0R,OAAOC,SAASV,UAAYC,GAEnCW,EAAL,CAEA,IAAMY,EAAa/P,SAAS9B,GAAS,EAC/B8R,EAAOb,EAAWY,GAExB1S,QAAQC,IAAI,cAAe0S,GACvBA,EC1ED,SAAuB/R,EAAc+R,GACxC,OAAOX,IACH,CACIC,OAAQ,MACRC,QAAS,yDACTC,IAAKvR,EAAO,IAAM+R,IAExBtT,MAAK,SAAC+S,GACJ,OAAOA,EAAIC,QACZC,OAAM,SAACzK,GAEN,OADA7H,QAAQ6H,MAAMA,GACP,QDiET+K,CAAcC,OAAOjS,GAAO+R,GAAMtT,MAAK,SAACyT,GACjCA,GAGH9S,QAAQC,IAAI,sBAAuB6S,GAEnC1B,EAAkB0B,GAClB9B,EAAcW,OAAOC,SAASV,UAC9BG,EAAe,OANfA,EAAe1Q,EAAmBC,EAAMC,EAAOC,OAQhDwR,OAAM,SAAAS,GACP1B,EAAe1Q,EAAmBC,EAAMC,EAAOC,OAGjDuQ,EAAe1Q,EAAmBC,EAAMC,EAAOC,OAEhD,CAACgR,IAaJ9R,QAAQC,IAAI,WAAY0R,OAAOC,SAASoB,UAC1BrB,OAAOC,SAASoB,SAGF,MAAxB1B,EACF/D,EACE,qCAEE,cAAC,EAAD,CAAS3K,MAAOvC,IAAYqB,aAnBb,SAAC0D,GACpB4L,EAAc5L,GACdsM,EAAoBtM,GACpBpF,QAAQC,IAAI,mBAiBR,cAAC,EAAD,CAAiBmF,UAAW+L,EAAU3L,iBAdnB,SAACyN,GACxB1B,EAAuB0B,GACvBxB,EAA2BwB,IAYmD5N,SAAUA,EAAUzE,KAAMA,EAAMC,MAAOA,EAAOC,KAAMA,EAAMwE,aAAclC,WAGjJ,CACL,IAAMmC,EAAUnC,EAAaT,SAAS7B,GAAQ,GAC9Cd,QAAQC,IAAI,WAAYsF,GAExB,IAgBE,OAdAgI,EACE,mCAEE,cAAC,EAAD,CAAW3J,iBAAkB2B,EAAQ3B,iBACnCM,WAAYqB,EAAQrB,WACpBC,UAAWoB,EAAQpB,UACnBM,OAAQc,EAAQd,OAChBlB,gBAAiBgC,EAAQhC,gBACzBzC,KAAMyE,EAAQzE,KACd0E,iBAAkBD,EAAQC,iBAC1B3E,MAAO8B,SAAS9B,GAChB6E,KAAM/C,SAAS/B,GAAO0D,UAAWiB,EAAQjB,cAI/C,MAAOyO,GACPxF,EAAO2F,IAAMC,cAAc,MAAO,KAAM,UAU5C,OACE,qBAAKlR,UAAU,MAAf,SAkBGsL,KExLM6F,GAAO,WAChB,IAAMC,EAAUC,cAChB,EAAiClR,mBAAS,IAA1C,mBAAO0O,EAAP,KAAiByC,EAAjB,KASA,OARAxC,qBAAU,WACN,OAAOsC,EAAQG,QAAO,SAAC5B,GACnB5R,QAAQC,IAAI,YAAY2R,EAASV,UACjCqC,EAAa3B,EAASV,eAG3B,CAACmC,IAEG,cAAC,GAAD,CAAKpC,KAAMH,KCPtB2C,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAGFC,SAASC,eAAe,SAM1B1U,M","file":"static/js/main.7e8c8f42.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {  getStartDate } from '../model/const';\r\nimport { Room } from '../model/enum';\r\nimport { FrontHeaderTable } from '../model/table';\r\n\r\n\r\ntype FrontHeader = {\r\n  ban: string\r\n  date: string\r\n  num: number\r\n}\r\nexport const frontHeader = (year: number, month: number, week: number): FrontHeader[] => {\r\n\r\n  return [{ ban: \"\", date: \"\", num: 1 }] ;\r\n}\r\n// export function getFrontHeaderTableList(\r\n// ): Array<FrontHeaderTable> {\r\n//   let list: Array<FrontHeaderTable> = [];\r\n\r\n//   getNextSundayAndWeekOrder((nextSunday: Date, weekly: number) => {\r\n//     roomList.forEach((room, ban) => {\r\n//       const header = new FrontHeaderTable(\r\n//         getNextNo(room),\r\n//         room,\r\n//         nextSunday,\r\n//         weekly,\r\n//         ban\r\n//       );\r\n//       list.push(header);\r\n//     });\r\n//   });\r\n//   return list;\r\n// }\r\n\r\nexport function getDefaultDate(): Date {\r\n  let date = new Date();\r\n  date.setFullYear(2021);\r\n  date.setMonth(6);\r\n  date.setDate(4);\r\n  date.setHours(0);\r\n  return date;\r\n}\r\n// export function getNextNo(room: Room) {\r\n//   let date1 = new Date();\r\n//   let date2 = getDefaultDate();\r\n//   date1.setHours(0);\r\n\r\n//   var weeks = Math.floor(\r\n//     (date2.getTime() - date1.getTime()) / (1000 * 3600 * 24 * 7)\r\n//   );\r\n//   console.log(\"week:\",weeks);\r\n//   return room + weeks;\r\n// }\r\nexport function getNextSundayAndWeekOrder(\r\n  callback: (nextSunday: Date, order: number) => void\r\n) {\r\n  let now = new Date();\r\n  let first = new Date();\r\n  var order = 0;\r\n  first.setDate(1);\r\n  while (true) {\r\n    let day = first.getDay();\r\n    if (day == 0) {\r\n      console.log(first);\r\n      order++;\r\n      break;\r\n    } else {\r\n      first.setDate(first.getDate() + 1);\r\n    }\r\n  }\r\n  while (true) {\r\n    if (now.getDate() - first.getDate() > 7) {\r\n      first.setDate(first.getDate() + 7);\r\n      order++;\r\n    } else {\r\n      first.setDate(first.getDate() + 7);\r\n      order++;\r\n      console.log(first, ' order:', order);\r\n      break;\r\n    }\r\n  }\r\n  callback(first, order);\r\n}\r\n\r\nexport const nowAsNextWeek: Date = (() => {\r\n  var date = new Date();\r\n  // date.setDate(0)\r\n  date.setDate(date.getDate() + 7);\r\n  console.log(\"date\",date);\r\n  return date;\r\n}).call(this);\r\n\r\nexport const nowYear = nowAsNextWeek.getFullYear();\r\nconsole.log(\"now year\", nowYear);\r\n\r\nexport function getYears(): Array<Number> {\r\n  let list: Array<Number> = [];\r\n  let first = new Date();\r\n  first.setFullYear(2021);\r\n  while (true) {\r\n    const compareYear = first.getFullYear();\r\n    if (compareYear <= nowYear) {\r\n      list.push(compareYear);\r\n      first.setFullYear(compareYear + 1);\r\n    } else break;\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function getMonth(year: Number): Array<Number> {\r\n  const list = [];\r\n  if (year < nowYear) {\r\n    for (let index = 0; index < 12; index++) {\r\n      list[index] = index + 1;\r\n    }\r\n  } else {\r\n    for (let index = 0; index < nowAsNextWeek.getMonth() + 1; index++) {\r\n      list[index] = index + 1;\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\nexport function setNotFoundMessage(year: string, month: string, week: string): string {\r\n  var endMessage = \"정보가 없습니다.\"\r\n  var mainInfo: string[] = [];\r\n  if (year) mainInfo.push(`${year}년 `);\r\n  if (month) mainInfo.push(`${month}월 `);\r\n  if (week) mainInfo.push(`${week}주차 `);\r\n  return mainInfo.reduce((pre, cur) => (\r\n    pre + cur\r\n  )) + endMessage;\r\n}","import { isatty } from \"tty\";\n\nexport interface FrontHanjaList {\n    hanja: string;\n    name: string;\n    count: string;\n    draw_list: string[];\n    sub: string;\n}\n\nexport interface QuestionModel {\n    q: string;\n    a: string;\n}\n\nexport interface Morning {\n    words: string;\n    where: string;\n}\n\nexport interface ChildAfternoon {\n    words: string;\n    where: string;\n}\n\nexport interface YouthAfternoon {\n    words: string;\n    where: string;\n}\n\nexport interface Adult {\n    words: string;\n    where: string;\n    answer: string\n}\n\nexport interface Yojeol {\n    morning: Morning;\n    child_afternoon: ChildAfternoon;\n    youth_afternoon: YouthAfternoon;\n    adult: Adult;\n}\n\nexport interface ContentsDto {\n    voca_list: Voca[];\n    front_hanja_list: FrontHanjaList[];\n    main_words: string;\n    questions: QuestionModel[];\n    yojeol: Yojeol;\n    back_hanja_list: string[];\n    week: number;\n    month: number;\n    yaer: number;\n    handleContentDto: (contentsDto: ContentsDto) => void;\n\n}\nfunction isEmpty(str: any): Boolean {\n    return (!str || str.length === 0);\n}\nfunction isArrayValueHasEmpty(strs: any[]): Boolean {\n    for (let index = 0; index < strs.length; index++) {\n        const element = strs[index];\n        if(isEmpty(element)){\n            return true\n        }\n    }\n    return false\n}\nexport function getMissedInfoSet(contentsDto: ContentsDto): Set<string> {\n    console.log(\"contents\", contentsDto)\n    var set = new Set<string>();\n\n    if (isEmpty(contentsDto.back_hanja_list) && contentsDto.back_hanja_list.length != 17) {\n        set.add(\"뒷면 아래 한자리스트\");\n    } else\n        contentsDto.back_hanja_list.filter((value, index) => {\n            isEmpty(value)\n        }).map((rs) => { set.add(\"뒷면 아래 한자리스트\"); })\n\n    if (isEmpty(contentsDto.front_hanja_list)) {\n        set.add(\"앞의 한자 단어 정보\")\n    } else\n        contentsDto.front_hanja_list.filter((frontHanja, index) => {\n            isEmpty(frontHanja.hanja) || isEmpty(frontHanja.count) || isEmpty(frontHanja.name) || isEmpty(frontHanja.sub)\n        }).map((rs) => { set.add(\"앞의 한자 단어 정보\") })\n\n    if (isEmpty(contentsDto.main_words)) {\n        set.add(\"본문 요절 정보\")\n    }\n\n    if (isEmpty(contentsDto.week)) { set.add(\"주차 정보\") }\n\n    if (isEmpty(contentsDto.questions)) {\n        set.add(\"문답 정보\")\n    } else\n        contentsDto.questions.filter((q, index) => {\n            isEmpty(q.a) || isEmpty(q.q)\n        }).map((rs) => { set.add(\"문답 정보\") })\n\n    if (isEmpty(contentsDto.voca_list)) {\n        set.add(\"앞의 한자 단어 정보\")\n    } else {\n        contentsDto.voca_list.filter((voca, index) => {\n            isEmpty(voca.hanja) || isEmpty(voca.mean)\n        }).map((rs) => { set.add(\"앞의 한자 단어 정보\") })\n    }\n\n    if (isArrayValueHasEmpty([contentsDto.yojeol.adult.answer, contentsDto.yojeol.adult.words, contentsDto.yojeol.adult.where])) {\n        set.add(\"어른 요절 정보\")\n    }\n    if (isArrayValueHasEmpty([contentsDto.yojeol.morning.where, contentsDto.yojeol.morning.words])) {\n        set.add(\"오전 요절 정보\")\n    }\n    if (isArrayValueHasEmpty([contentsDto.yojeol.child_afternoon.words, contentsDto.yojeol.child_afternoon.where])) {\n        set.add(\"유년부 오후 요절\")\n    }\n    if (isArrayValueHasEmpty([contentsDto.yojeol.youth_afternoon.words, contentsDto.yojeol.youth_afternoon.where])) {\n        set.add(\"중등부 오후 요절\")\n    }\n    console.log(\"빠진 부분:\", set)\n    return set\n}\n\nexport interface BackContents {\n    main_words: string;\n    questions: QuestionModel[];\n    yojeol: Yojeol;\n    //0: where, \n    back_hanja_list: string[];\n    week: number;\n    month: number;\n    yaer: number;\n    index: Index;\n    order: number\n}\nexport enum Index {\n    Kinder = 0, Child, Youth, Adult\n}\nexport interface Voca {\n    hanja: string;\n    mean: string;\n}\n\nexport class HTTPError extends Error {\n    statusCode: number\n    constructor(statusCode: number, message?: string) {\n        super(message) // 반드시 호출해야함\n        this.name = `HTTPError`\n        this.statusCode = statusCode\n    }\n}\n\nexport interface YearJson {\n    month_files: string[]\n}","import React, { Component, MouseEventHandler, ReactElement, ReactHTML, ReactHTMLElement, ReactNode, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Router } from \"react-router-dom\";\nimport { gitRoot } from \"../App\";\nimport { getMonth, getYears, nowYear } from \"../util/util\";\nimport \"../view/SideBar.css\";\nimport ContentsContainer from \"./Contents\";\n\ntype YearsProps = {\n  years: Array<Number>;\n  stateHandler: (path: string) => void;\n};\n\ntype MonthProps = {\n  thisYear: Number;\n  stateHandler: (path: string) => void;\n}\nconst MonthList = (monthProps: MonthProps) => {\n  console.log(\"month list\", monthProps);\n  const list: Array<JSX.Element> = []\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\n    const id = e.currentTarget.id\n    monthProps.stateHandler(id)\n  }\n  getMonth(monthProps.thisYear).map((month) => {\n    list.push(\n      <Link to={`/${gitRoot}/${monthProps.thisYear}/${month}`}  >\n        <p className=\"sideBar-month\" id={`/${gitRoot}/${monthProps.thisYear}/${month}`} onClick={onClick}>\n          {month}\n        </p>\n      </Link>\n    )\n  })\n  return (\n    <BrowserRouter>\n      {list}\n    </BrowserRouter>\n  );\n}\nconst SideBar = (yearsProps: YearsProps) => {\n\n  const [selectedYear, setYear] = useState<Number>(nowYear);\n  console.log(\"sideBar:\", selectedYear);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    const thisElement = (event.target as HTMLElement);\n    const year = thisElement.id;\n    setYear(Number.parseInt(year));\n  }\n\n  return (\n\n    <div className=\"sideBar\">\n      {\n        yearsProps.years.map((year) => {\n          return (\n            <span>\n              <p className=\"sideBar-year\" id={year.toString()} onClick={handleClick}> {year}</p>\n              <div className=\"sideBar-month\">\n                {year == selectedYear && <MonthList thisYear={year} stateHandler={yearsProps.stateHandler} />}\n              </div>\n            </span>\n          );\n        })\n      }\n    </div>);\n}\n\n\n\nexport default SideBar;\n","import \"./Contents.css\"\nimport axios, { AxiosResponse } from 'axios'\nimport React, { DOMElement, ReactNode, useEffect, useState } from \"react\"\nimport { ContentsDto, YearJson,getMissedInfoSet } from \"../model/Api\"\nimport { FrontHanjaList } from \"../model/table\"\n\nimport { error } from \"console\"\nimport { throws } from \"assert\"\nimport { BrowserRouter, Link } from \"react-router-dom\"\nimport { GenModal } from \"./Generator\"\nimport { gitRoot } from \"../App\"\ntype ContentsProps = {\n    contentsList: ContentsDto[] | null;\n    yearMonth: string;\n    handleContentDto: (contentDto: ContentsDto) => void;\n    notFound: string | null;\n    year: string;\n    month: string;\n    week: string;\n}\nfunction getPath(yearMonth: string): string {\n    const pathLilst = yearMonth.split(\"/\").filter((value) => value != \"\")\n    const year = pathLilst[0].substring(2);\n    var month: string | number = Number.parseInt(pathLilst[1]);\n    if (month < 10) {\n        month = \"0\" + month;\n    } else month = month.toString();\n    //2020/04 -> 2004\n    return year + month\n}\nconst defaultString = \"999999\"\n\nexport const ContentsWrapper = (contentsProps: ContentsProps) => {\n    console.log('git', contentsProps.yearMonth);\n    if (contentsProps.notFound || !contentsProps.contentsList) {\n        return (\n            <div className=\"contents\" >\n                <div className=\"error\">\n                    {contentsProps.notFound}\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"contents\">\n                <div className=\"hanja\" id=\"main_title\">\n                 \n                    {contentsProps.year}년 {contentsProps.month}월\n                </div>\n                {\n                    contentsProps.contentsList!.map((content, index) => (\n                        \n                        <div>\n                             {\n                                // 리액트 링크(URL) 훅 만들기\n                                <BrowserRouter>\n                                    <Link className=\"print-link\" to={`/${gitRoot}/${contentsProps.year}/${contentsProps.month}/${content.week}`}>\n                                        \n                                        <button className=\"print-button\" onClick={() => contentsProps.handleContentDto.call(this, content)}>{`${content.week}주차 프린트 화면 ${getMissedInfoSet(content).size == 0 ? \"(완성)\" : \"(미완성)\"}`}</button>\n                                    </Link>\n                                </BrowserRouter>\n                            }\n                            <ContentView\n                                front_hanja_list={content.front_hanja_list}\n                                questions={content.questions}\n                                yojeol={content.yojeol}\n                                back_hanja_list={content.back_hanja_list}\n                                week={content.week} main_words={content.main_words}\n                                handleContentDto={contentsProps.handleContentDto}\n                                month={parseInt(contentsProps.month)}\n                                yaer={parseInt(contentsProps.year)} voca_list={content.voca_list} />\n                           \n                        </div>\n                    ))\n                }\n                <br /><br />\n            </div>\n        );\n    }\n}\n\nconst ContentView = (contentsDto: ContentsDto) => {\n    const frontList = (\n        <div className=\"front_container\">\n            {contentsDto.front_hanja_list.map((front) =>\n                <div className=\"front\">\n                    <div className=\"front_hanja\">{front.hanja}</div>\n                    <div>{front.name}</div>\n                    {/* {\"획순:\" + front.count},<span >{front.draw_list}</span> */}\n                </div>\n            )}\n        </div>\n    );\n    const questions = (\n        <div className=\"questions\">\n            <br /> <span>-문답-</span><br />\n            {\n                contentsDto.questions.map((value, index) => (\n                    <div>\n                        <span>{index + 1}. {value.q}</span> <br />\n                        <span> - {value.a}</span>\n                    </div>\n                ))\n            }\n        </div>\n    );\n    const backHanjaList = (\n        <div><br />\n            {\n                contentsDto.back_hanja_list.map((value) => (\n                    <span className=\"back_hanja\">{value} </span>\n                ))\n            }\n        </div>\n    );\n    const yojeol = (\n        <div className=\"yojeol-container\">\n            <br /><div>-요절-</div>\n            <br /> 다음주 오전요절 <div className=\"y_word\">- {contentsDto.yojeol.morning.words}<span className=\"y_where\">({contentsDto.yojeol.morning.where}) </span></div>\n            <br /> 유년반 오후요절 <div className=\"y_word\">- {contentsDto.yojeol.child_afternoon.words}<span className=\"y_where\"> ({contentsDto.yojeol.child_afternoon.where}) </span></div>\n            <br /> 중등반 오후요절 <div className=\"y_word\">- {contentsDto.yojeol.youth_afternoon.words}<span className=\"y_where\"> ({contentsDto.yojeol.youth_afternoon.where})</span></div>\n            <br /> 장년반 요절     <div className=\"y_word\">- {contentsDto.yojeol.adult.words}<span className=\"y_where\"> ({contentsDto.yojeol.adult.where})</span></div>\n        </div>\n    );\n    // console.log(frontList);\n\n    return (\n        <div className=\"hanja\">\n            <br />\n            <div id=\"week\"># {contentsDto.week}주차 ({contentsDto.main_words})</div><br />\n            {frontList}\n            {questions}\n            {yojeol}\n\n        </div>\n    )\n}\nexport default ContentsWrapper","import { Room } from \"./enum\";\r\nexport const bracketRegex = new RegExp(/[(](.*?)[)]/, 'g');\r\n// export const roomList:{index:number}[] = new Map()\r\n// roomList.set(\"유치반\",Room.KINDERGARTEN);\r\n// roomList.set(\"유년\",Room.ELEMENTARY);\r\n// roomList.set(\"중등\",Room.TEENAGER);\r\n// roomList.set(\"장년\",Room.ADULT);\r\nexport const banList = [\r\n    \"유치반\",\r\n    \"유년\",\r\n    \"중등\",\r\n    \"장년\"\r\n]\r\nexport const weeklyList = [\"첫째 주일\", \"둘째 주일\", \"셋째 주일\", \"넷째 주일\", \"다섯째 주일\"];\r\n\r\n\r\nexport const startYear = 2021;\r\n// month start zero\r\nexport const startMonth = 6;\r\nexport const startDate = 4;\r\n\r\nexport const getStartDate = (): Date => {\r\n    const d = new Date();\r\n    d.setFullYear(startYear)\r\n    d.setMonth(startMonth)\r\n    d.setDate(startDate)\r\n    d.setHours(0)\r\n    return d;\r\n}\r\nexport const getWeekly = (targetDate: Date): number => {\r\n    const firstDate = new Date();\r\n    // firstDate.setHours(0, 0, 0, 0)\r\n    firstDate.setFullYear(targetDate.getFullYear())\r\n    firstDate.setMonth(targetDate.getMonth(), 1)\r\n    console.log(\"firstData:\" + firstDate);\r\n    console.log(\"targDate:\" + targetDate);\r\n    // if (firstDate.getDate() == targetDate.getDate() &&\r\n    //     firstDate.getMonth() && targetDate.getMonth() &&\r\n    //     firstDate.getFullYear() == targetDate.getFullYear() &&\r\n    //     firstDate.getDay() == targetDate.getDay()) {\r\n    //     return 0;\r\n    // }\r\n    var interpolation = 0\r\n    if(firstDate.getDay() == 0){\r\n        console.log(\">>>>>\");\r\n        interpolation += 1\r\n        \r\n    }\r\n\r\n\r\n\r\n    // firstDate.setDate(1)\r\n\r\n    var weeks = Math.floor(\r\n        (targetDate.getTime() - firstDate.getTime()) / (1000 * 3600 * 24 * 7)\r\n    ) + interpolation;\r\n    console.log(\"weeks:\", weeks);\r\n\r\n    return weeks;\r\n}\r\nexport const getDate = (year: number, month: number, week: number): Date => {\r\n    const d = new Date();\r\n    d.setFullYear(year);\r\n    d.setMonth(month - 1, 1);\r\n    d.setHours(0);\r\n    // d.setDate(1);\r\n\r\n    // d.setHours(0, 0, 0, 0);\r\n\r\n    //day indexing >> lord's day:0, mon:1 ~\r\n    var initDay = d.getDay()\r\n    console.log('getDate init D', d);\r\n    console.log(\"year:\", d.getUTCFullYear(), \",month:\", d.getUTCMonth(), \",day:\", d.getUTCDate());\r\n    if (initDay == 0) {\r\n        let leftDate = (week - 1) * 7;\r\n        d.setDate(1 + leftDate);\r\n    } else {\r\n        let nextOffsetOfSundayFromInitDay = 7 - initDay\r\n        let leftDate = (week - 1) * 7\r\n        d.setDate(1 + nextOffsetOfSundayFromInitDay + leftDate)\r\n    }\r\n    return d;\r\n}\r\nexport const getDiffWeek = (targetDate: Date): number => {\r\n    let startDate = getStartDate()\r\n    let raw = (targetDate.getTime() - startDate.getTime()) / (1000 * 3600 * 24 * 7)\r\n    var weeks = Math.ceil(raw);\r\n    console.log(\"raw diff dates:\", raw);\r\n\r\n    console.log(\"getDiffWeek:\", weeks, \",targetDate:\", targetDate, \",startDate:\", startDate);\r\n\r\n    return weeks;\r\n}\r\n\r\n","export enum Room{\r\n    KINDERGARTEN=1400,\r\n    ELEMENTARY=1400,\r\n    TEENAGER=1516,\r\n    ADULT=1140\r\n}\r\n","// import { throws } from \"assert\";\r\nimport { bracketRegex, weeklyList } from \"./const\";\r\nimport { Room } from \"./enum\";\r\n\r\nexport class FrontHeaderTable {\r\n  no: number;\r\n  date: Date;\r\n  weekly: number;\r\n  ban: string;\r\n  dateString: string;\r\n  constructor(no: number, date: Date, weekly: number, ban: string) {\r\n    this.no = no;\r\n    this.date = date;\r\n    this.weekly = weekly;\r\n    this.ban = ban;\r\n    this.dateString =\r\n      this.date.getFullYear() +\r\n      \" 년 \" +\r\n      (this.date.getMonth() + 1) +\r\n      \" 월 \" +\r\n      this.date.getDate() +\r\n      \" 일 \" +\r\n      weeklyList[this.weekly]\r\n\r\n  }\r\n}\r\n\r\nexport let FrontHanjaList: Array<Hanja>;\r\nexport class Hanja {\r\n  chinese: string;\r\n  korean: string;\r\n  constructor(ch: string, ko: string) {\r\n    this.chinese = ch;\r\n    this.korean = ko;\r\n  }\r\n}\r\nexport class FrontHanja extends Hanja {\r\n  strokeOrder: number;\r\n  subChinese: string;\r\n  subChineseKo: string;\r\n  constructor(\r\n    ch: string,\r\n    korean: string,\r\n    strokeOrder: number,\r\n    subCh: string,\r\n    subChKo: string\r\n  ) {\r\n    super(ch, korean);\r\n    this.strokeOrder = strokeOrder;\r\n    this.subChinese = subCh;\r\n    this.subChineseKo = subChKo;\r\n  }\r\n}\r\n\r\n/**\r\n * ^\r\n * |  front page\r\n * |\r\n * * * * * * * * *\r\n * |\r\n * |  back page\r\n * v\r\n */\r\n\r\nexport class Question {\r\n  /**\r\n   * ex) q1 = 1. 에베소 교회(敎會)기 미워한 것은 무엇인가?\r\n   */\r\n  questionList = [\"\", \"\", \"\"];\r\n\r\n  constructor(q1: string, q2: string, q3: string) {\r\n    this.questionList[0] = q1;\r\n    this.questionList[1] = q2;\r\n    this.questionList[2] = q3;\r\n  }\r\n  getKoreanQuestion(index: number): string {\r\n    var q = \"\";\r\n    try {\r\n      q = this.questionList[index];\r\n      q = q.replace(bracketRegex, \"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      return q;\r\n    }\r\n  }\r\n  getHanjaQuestion(index: number): string {\r\n    var q = \"\";\r\n    q = this.questionList[index];\r\n    if (q.match(/[(]/) === null) {\r\n      return q;\r\n    } else {\r\n      while (q.match(bracketRegex) != null) {\r\n        let frontIndex = q.indexOf(\"(\");\r\n        let backIndex = q.indexOf(\")\");\r\n        let chLen = backIndex - frontIndex - 1;\r\n        let removeFirstIndex = frontIndex - chLen;\r\n        q = q.substring(0, removeFirstIndex) + q.substring(frontIndex + 1, backIndex) + q.substring(backIndex + 1, q.length);\r\n\r\n      }\r\n      return q;\r\n    }\r\n  }\r\n}\r\n","//  function makeHeaderTable(htmlElement:HTMLElement){\r\n//     const container = document.createElement(\"div\");\r\n//     container.className = \"container\"\r\n\r\nimport React, { Props, PropsWithRef, ReactInstance } from \"react\";\r\nimport { getEnabledCategories } from \"trace_events\"\r\nimport { FrontHeaderTable } from \"../../model/table\";\r\nimport \"../Contents.css\"\r\nimport \"../print_css/back.css\"\r\n\r\nexport interface BackHeader{\r\n    no:number\r\n    main_word:string\r\n    ban:string\r\n}\r\nconst centerText = \"聖 經 工 課 問 答\"\r\nexport const BackHeaderView = (back:BackHeader) => {\r\n    return (\r\n        <div className=\"back-header\">\r\n            <div className=\"grid-back-center\">{centerText}</div>\r\n            <div className=\"grid-back-top-left\">{back.ban}반 제 {back.no} 호</div>\r\n            <div className=\"grid-back-bottom-right\"></div>\r\n            <div className=\"grid-back-bottom-left\">{back.main_word}</div>\r\n            <div className=\"grid-back-top-right\">確   認</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const HeaderView = (header: FrontHeaderTable) => {\r\n\r\n    return (\r\n        <div className=\"top hanja\">\r\n            <div className=\"grid-000 top-item\">第 <span className=\"kr\">{header.no}</span> 號</div>\r\n            <div className=\"grid-001 top-item\">聖 經 漢 字 工 夫</div>\r\n            <div className=\"grid-002 top-item\"><span className=\"kr\">{header.ban}</span> 班</div>\r\n            <div className=\"grid-010 top-item kr\">{header.dateString}</div>\r\n            <div className=\"grid-011 top-item\">漢字 姓名</div>\r\n            <div className=\"grid-012 top-item\"> </div>\r\n        </div>\r\n    )\r\n}\r\n","import { BackContents, Index } from \"../../model/Api\"\nimport { banList } from \"../../model/const\"\nimport { Question } from \"../../model/table\"\nimport \"../print_css/back.css\"\nimport { BackHeaderView, HeaderView } from \"./header\"\ntype Back = {\n    index: Index\n}\nexport function toAdultText(text: string): JSX.Element {\n    var cnt = 0\n    var str = text\n    var jsxList: JSX.Element[] = []\n    while (true) {\n        if (cnt > 20) {\n            console.error(\"It may infinit loop\")\n            break\n        }\n        let endIndex = str.indexOf(\")\")\n        let startIndex = str.indexOf(\"(\")\n\n\n        if (endIndex == -1) break\n        let len = endIndex - startIndex - 1\n        console.log(len)\n        let ch = <span className=\"ch\">{str.substring(startIndex + 1, endIndex)}</span>\n        jsxList.push(ch)\n        str = str.substring(0, startIndex - len) + \"$\" + str.substring(endIndex + 1, str.length)\n\n        cnt++\n    }\n    var chCnt = 0\n    let jsx: JSX.Element = <>\n        {\n            str.split(\"\").map((val, idx) => {\n                if (val == \"$\") {\n                    chCnt++\n                    console.log(\"map\" + chCnt);\n\n                    return jsxList[chCnt - 1]\n                } else return <>{val}</>\n\n            })\n\n        }\n    </>\n    return jsx\n    // return <>{str.replaceAll(\"#\",\"<span classNmae='ch'>\").replaceAll(\"$\",\"</span>\")}</>\n}\n//backContents.index \nexport const BackView = (backContents: BackContents) => {\n    let needAnswer = backContents.index == Index.Youth\n\n    const qCnt = backContents.questions.length\n    const QuestionsView = (back: Back) => {\n        const list = backContents.questions.map((questions) => {\n            if (back.index != Index.Adult)\n                return questions.q.replaceAll(/[(](.*?)[)]/gi, \"\")\n            else {\n                return toAdultText(questions.q)\n            }\n        })\n\n        let answers = backContents.questions\n\n        return (\n            <>\n                <div className=\"back-box q1 kr\">      <div className=\"back-text\">1. {qCnt > 0 && list[0]}</div><div className={needAnswer ? \"q-answer-show\" : \"q-answer\"} > {needAnswer ? \"- \" + answers[0].a : \"\"}</div></div>\n                <div className=\"back-box q2 kr\">      <div className=\"back-text\">2. {qCnt > 1 && list[1]}</div><div className={needAnswer ? \"q-answer-show\" : \"q-answer\"} > {needAnswer ? \"- \" + answers[1].a : \"\"}</div></div>\n\n                {(qCnt == 3 || (qCnt < 3 && backContents.index == 3)) && <div className=\"back-box q3 kr\"><div className=\"back-text\">3. {qCnt > 2 && list[2]}</div><div className={needAnswer ? \"q-answer-show\" : \"q-answer\"} >{needAnswer ? \"- \" + answers[2].a : \"\"}</div> </div>}\n            </>\n        )\n    }\n    const hasOverThreeWord = backContents.back_hanja_list.findIndex((v, i) => v.length > 2);\n\n    const BottomHanjasView = (back: Back) => (\n        <div className={'back-box back-bottom ' + \"back-bottom\" + back.index}  >\n            <div className=\"back-title-container\">\n                <div className=\"back-bottom-title kr\"><span className=\"ch\">聖經漢字</span> 배우기</div>\n                {/* <div/><div/> */}\n                <div className=\"back-bottom-where kr\">({backContents.back_hanja_list[0]})</div>\n            </div>\n            <div className=\"back-bottom-hanja-container\">\n\n                {backContents.back_hanja_list.filter((v, i) => { return i != 0 }).map((val, index) => {\n\n                    // console.log(val);\n                    if (back.index == Index.Child && index >= 12) return\n                    var el = val.trim()\n                    const elLen = el.length;\n                    const korean = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n                    const regex = new RegExp(korean)\n                    var jsx: JSX.Element = <></>\n                    const isKr = el.match(regex) != undefined\n                    if (isKr) {\n                        jsx = <span className=\"bottom-hanja-kr kr\">{el}</span>\n                    }\n\n\n                    if (index % 4 == 0) return <div className={\"back-wrap back-hanja-text \"}>{isKr && jsx}{!isKr && el}{val.trim().length > 2 && <br />}(<span className=\"bracket\">{val.trim()}</span>) </div>\n                    return <div className={\"back-hanja-text \"}>{isKr && jsx}{!isKr && el}{val.trim().length > 2 && <br />}(<span className=\"bracket\">{val.trim()}</span>)</div>\n                })}\n            </div>\n\n        </div>\n    )\n    const YouthYojeolView = () => (\n        <>\n            <div className=\"back-box youth-y1 kr\">\n\n                <div className=\"back-text back-yojeol yojeol-title\">다음 주 <span className=\"ch\">午前 要節</span></div>\n                <div className=\"back-text back-yojeol\">\n                    {backContents.yojeol.morning.words}\n                </div>\n                <div className=\"back-yojeol-where kr\">{backContents.yojeol.morning.where}</div>\n            </div>\n            <div className=\"back-box youth-y2 kr\">\n                <div className=\"back-text back-yojeol yojeol-title\"> 이번 주 <span className=\"ch\">午後 要節</span></div>\n                <div className=\"back-text back-yojeol\">{backContents.yojeol.youth_afternoon.words}</div>\n                <div className=\"back-yojeol-where\">{backContents.yojeol.youth_afternoon.where}</div>\n            </div>\n        </>\n    )\n    const ChildYojeolView = () => (\n        <>\n            <div className=\"back-box child-y1 kr\">\n                <div className=\"back-text back-yojeol\">\n                    <div className=\"back-child-yojeol-title\">다음 주 오전 요절 쓰기</div>\n                    {backContents.yojeol.morning.words}\n                    <ol>\n                        <li> <div className=\"line line1\" >1.</div></li>\n                        <li> <div className=\"line line2\" >2.</div></li>\n                        <li> <div className=\"line line3\" >3.</div></li>\n                    </ol>\n                    <div className=\"child-yojeol-where\">\n                        {backContents.yojeol.morning.where}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n    const AdultYojeolView = () => (\n        <div className=\"back-box adult-y1 kr\">\n            <div className=\"yojeol-title\">\n                요절 찾고 외우기\n            </div>\n            <div className=\"back-text back-yojeol\">\n                {toAdultText(backContents.yojeol.adult.words)}\n            </div>\n            <div className=\"back-yojeol-where back-adult-where\">\n                {backContents.yojeol.adult.where}\n            </div>\n            <div className=\"back-text back-last-answer\">(지난 주 해답 : {backContents.yojeol.adult.answer})</div>\n        </div>\n    )\n    const YouthBackBottomView = (back: Back) => {\n        return (\n            <div className=\"back-content hanja\">\n                <QuestionsView index={back.index} />\n                <YouthYojeolView />\n                <BottomHanjasView index={back.index} />\n            </div>\n        )\n    }\n\n    const ChildBackBottomView = (back: Back) => (\n        <div className=\"back-content hanja\">\n            <QuestionsView index={back.index} />\n            <ChildYojeolView />\n            <BottomHanjasView index={back.index} />\n        </div>\n    )\n\n    const AdultBackBottomView = (back: Back) => (\n        <div className=\"back-content hanja\">\n            <QuestionsView index={back.index} />\n            <AdultYojeolView />\n            <BottomHanjasView index={back.index} />\n        </div>\n    )\n\n    return (\n        <div className=\"hanja-middle\">\n            <BackHeaderView\n                no={backContents.order}\n                main_word={backContents.main_words}\n                ban={banList[backContents.index]} />\n\n            <div className=\"text\">\n                문답\n            </div>\n\n            {backContents.index == Index.Child && <ChildBackBottomView index={Index.Child} />}\n            {backContents.index == Index.Youth && <YouthBackBottomView index={Index.Youth} />}\n            {backContents.index == Index.Adult && <AdultBackBottomView index={Index.Adult} />}\n        </div>\n    )\n}\n\n\n","import { func } from \"prop-types\";\nimport { ContentsDto, FrontHanjaList, Index, Voca } from \"../../model/Api\";\n\n\nfunction frontWriteTable(age: Index, rowCnt: Number, swapHanjaList: Array<FrontHanjaList | null>): JSX.Element {\n    let rowArr = []\n    console.log(\"frontWriteTable:swapHanjaList\", swapHanjaList, swapHanjaList[3]);\n\n    for (let i = 0; i < rowCnt; i++) {\n        rowArr[i] = i\n    }\n    return (<table>\n        <tbody>\n            {\n                rowArr.map((value, index) => {\n                    return (\n                        <tr className={index == 0 && \"hanja-big ch\" || index == 1 && \"hanja-name kr\" || index == 2 && \"hanja-big follow-ch ch\" || index == 3 && \"hanja-name kr\" || \"\"} >\n                            <td className=\"1\">{((index == 0 || index == 2) && (swapHanjaList[0] != undefined)) && (swapHanjaList[0] as FrontHanjaList).hanja}</td>\n\n                            <td className=\"2\">{((index == 0 || index == 2) && (swapHanjaList[1] != undefined)) && (swapHanjaList[1] as FrontHanjaList).hanja}</td>\n                            <td>{((index == 0 || index == 2) && (swapHanjaList[2] != undefined)) && (swapHanjaList[2] as FrontHanjaList).hanja}</td>\n                            <td>{((index == 0 || index == 2) && (swapHanjaList[3] != undefined)) && (swapHanjaList[3] as FrontHanjaList).hanja}</td>\n                        </tr>\n                    )\n                })\n            }\n        </tbody>\n    </table>\n    )\n}\n// <<<<<<< HEAD\nexport function frontWriteView(age: Index, swapHanjaList: Array<FrontHanjaList | null>, vocaList: Array<Voca>): JSX.Element {\n    var rowCnt = 9\n    if (age == Index.Child) {\n        rowCnt = 7\n        // if (vocaList[0].hanja.length == 3 && vocaList.length == 1) {\n            // =======\n            // export function frontWriteView(age: Index, swapHanjaList: Array<FrontHanjaList | null>, firstVocaLen: number): JSX.Element {\n            //     var rowCnt = 9\n            //     if (age == Index.Child) {\n            //         rowCnt = 7\n            //         if (firstVocaLen == 3) {\n            // >>>>>>> front-hanja-more-than-two\n            // rowCnt = 8\n        // }\n    }\n    return (\n        <div className=\"bottom-table\">\n            <span className=\"bottom-left\">\n                {frontWriteTable(age, rowCnt, swapHanjaList)}\n            </span>\n            <span className=\"bottom-right\">\n                {frontWriteTable(age, rowCnt, swapHanjaList)}\n            </span>\n\n        </div>\n    )\n}\nexport function getChildWriteCase(vocaArr: Array<Voca>): ChildWriteCase {\n    var enumCase = ChildWriteCase.case22\n    var arrLen = vocaArr.length\n    switch (arrLen) {\n        case 1:\n\n            if (vocaArr[0].hanja.length == 4)\n                enumCase = ChildWriteCase.case4\n            else\n                enumCase = ChildWriteCase.case3\n            break;\n        case 2:\n            let voca0len = vocaArr[0].hanja.length\n            let voca1len = vocaArr[1].hanja.length\n            if (voca0len == 3 || voca1len == 3) {\n                enumCase = ChildWriteCase.case31\n            }else if(voca0len == 1 && voca1len == 2){\n                enumCase = ChildWriteCase.case12\n            } else if(voca0len == 2 && voca1len == 1){\n                enumCase = ChildWriteCase.case21\n            }\n\n            break;\n        case 3:\n            enumCase = ChildWriteCase.case111\n            vocaArr.forEach((voca, index) => {\n                let _vocaLen = voca.hanja.length\n                if (_vocaLen == 2 && index == 0) {\n                    enumCase = ChildWriteCase.case211\n                } else if (_vocaLen == 2 && index == 2) {\n                    enumCase = ChildWriteCase.case112\n                }\n            })\n            break;\n        case 4:\n            enumCase = ChildWriteCase.case1111\n            break;\n    }\n    return enumCase\n}\nexport function childVocaWriteUnit(voca: Voca, index: Number, childWriteCase: ChildWriteCase): JSX.Element {\n\n    var needEmptySpace = (childWriteCase == ChildWriteCase.case112 && index == 2) || (childWriteCase == ChildWriteCase.case211 && index == 0)\n\n    console.log(\"childVocaWriteUnit\", childWriteCase);\n\n    //#     #(this)\n    var isRightPostion = false\n    let vocaLen = voca.hanja.length\n    if (vocaLen == 1) {\n        if (index == 1 && childWriteCase != ChildWriteCase.case211 && childWriteCase != ChildWriteCase.case31 && childWriteCase != ChildWriteCase.case21) {\n            isRightPostion = true\n        } else if (index == 3) {\n            isRightPostion = true\n        } else if (childWriteCase == ChildWriteCase.case211 && index == 2) {\n            isRightPostion = true\n        }\n\n\n\n\n    }\n    return (\n        <>\n            <div className={`write_voca_container`}>\n                {voca.hanja.split(\"\").filter((v) => v != \"\").map((hanja, j) => (\n                    <>\n                        <div className={isRightPostion ? \"voca_hanja_unit voca_hanja_unit_right\" : \"voca_hanja_unit\"} >\n                            <div className=\"voca_hanja\">{hanja}</div>\n                            <div className=\"voca_mean_sound_unit\">\n                                <div className=\"voca_mean_key\"><div>뜻</div></div>\n                                <div className=\"voca_sound_key\"><div>음</div></div>\n                                <div className=\"voca_mean_value\">뜻</div>\n                                <div className=\"vocal_sound_value\">음</div>\n                            </div>\n                        </div>\n                    </>\n                ))}\n                <div className={\"write_voca_mean\"}>\n                </div>\n\n            </div >\n            {needEmptySpace ? <div className=\"write_voca_empty\"></div> : <></>}\n        </>\n    )\n}\nenum ChildWriteCase {\n    case12,\n    case21,\n    //##\n    //##\n    case22,\n    //#     #\n    //##\n    //or\n    //##\n    //#     #\n    case211,\n    case112,\n    //#     #\n    //#\n    case111,\n    //###\n    //#\n    case31,\n    //#     #\n    //#     #\n    case1111,\n    //###\n    //OR\n    //####\n    case4,\n    case3\n}\nexport function childWordWriteView(vocaArr: Array<Voca>): JSX.Element {\n    //예외 단어가 4글자일때\n    var childWriteCase = getChildWriteCase(vocaArr)\n    var rootClassName = \"write_voca_total_container hanja\"\n\n    switch (childWriteCase) {\n        case ChildWriteCase.case112: {\n            rootClassName += \" write_voca_total_container3_21\"\n            break;\n        }\n        case ChildWriteCase.case211: {\n            rootClassName += \" write_voca_total_container3_12\"\n            break;\n        }\n        case ChildWriteCase.case1111: {\n            rootClassName += \" write_voca_total_container4\"\n            break;\n        }\n    }\n    var emptyIndex = -1\n    if (childWriteCase == ChildWriteCase.case112) {\n        emptyIndex = 3\n    } else if (childWriteCase == ChildWriteCase.case211) {\n        emptyIndex = 1\n    }\n    return (\n        <div className={rootClassName}>\n\n            {\n                vocaArr.map((voca, i) => {\n                    return childVocaWriteUnit(voca, i, childWriteCase)\n                }\n                )\n            }\n            {childWriteCase == ChildWriteCase.case4 && <div className=\"four_len_voca_write\">{vocaArr[0].hanja}<br />{vocaArr[0].hanja}</div>}\n        </div>\n    )\n}","import { BackContents } from \"../../model/Api\"\nimport { getDate, weeklyList } from \"../../model/const\"\nimport \"../print_css/kinder.css\"\nexport const KinderHeaderView = (kinderPrintDto: KinderPrintDto) => {\n    return (\n\n        <div className=\"kinder-header\">\n            <div className=\"grid-kinder-center\">유치부 성경 요절 쓰기</div>\n            <div className=\"grid-kinder-name-title\">성명</div>\n            <div className=\"grid-kinder-name0\"></div>\n            <div className=\"grid-kinder-name1\"></div>\n            <div className=\"grid-kinder-name2\"></div>\n            <div className=\"grid-kinder-word-title\">다음주 요절 쓰기</div>\n            <div className=\"grid-kinder-where\">{kinderPrintDto.where}</div>\n        </div>\n    )\n\n}\ntype KinderPrintDto = {\n    where: string;\n    yojeol: string;\n    order: number;\n    dataString: string;\n    isFront: boolean\n\n}\nexport const KinderPrintView = (kinderPrintDto: KinderPrintDto) => {\n    var row = 15\n    const col = 11\n\n    // const yojeol = kinderPrintDto.yojeol;\n    const yojeol = \" \" + kinderPrintDto.yojeol\n    const follow = yojeol\n    const yojeolCnt = (yojeol.length)\n    // 가로 11줄, 세로 15줄\n    const yojeolLineCnt = Math.ceil(yojeolCnt / 11)\n    if (yojeolLineCnt > 7) {\n        row = 16\n    }\n    const lineDiff = Math.round(15 / yojeolLineCnt)\n\n    var arr2D: Array<Array<JSX.Element>> = new Array(15)\n    var cnt = 0;\n    var followCnt = 0;\n    for (let i = 0; i < row; i++) {\n        arr2D[i] = [];\n        var isInsertLine: boolean = false\n        var followInserLine = false\n        if (i % lineDiff == 0) isInsertLine = true\n        else if (i % lineDiff == 1) followInserLine = true\n        else isInsertLine = false\n\n        for (let j = 0; j < col; j++) {\n            if (yojeolCnt > cnt && isInsertLine) {\n                if(i != 0 && j == 0 && yojeol[cnt] == \" \"){\n                    cnt++\n                }\n                arr2D[i][j] = <th className=\"one\">{yojeol[cnt]}</th>\n                cnt++;\n            } else if (yojeolCnt > followCnt && followInserLine) {\n                if(i != 1 && j == 0 && yojeol[followCnt] == \" \"){\n                    followCnt++\n                }\n                arr2D[i][j] = <th className=\"follow\">{yojeol[followCnt]}</th>\n                followCnt++;\n            } else {\n                arr2D[i][j] = <th></th>\n            }\n        }\n    }\n    // console.log(arr2D);\n\n\n    return (\n        <div className=\"hanja kr\">\n\n            <KinderHeaderView where={kinderPrintDto.where} yojeol={kinderPrintDto.yojeol} order={kinderPrintDto.order} dataString={kinderPrintDto.dataString} isFront={false} />\n\n            <div className=\"kinder-date\">\n                <div>제 {kinderPrintDto.order}호 </div><div> 주후 {kinderPrintDto.dataString} </div><div className=\"kinder-date-end\">  염천교회 주일학교 유치부</div>\n            </div>\n            <table className=\"kinder-table\">\n                {\n                    arr2D.map((el) => (\n                        <tr>\n                            {\n                                el.map((tr) => {\n                                    return tr\n                                })\n                            }\n                        </tr>\n                    ))\n                }\n            </table>\n        </div>\n    )\n}","import { ContentsDto, FrontHanjaList, Index, Voca } from \"../../model/Api\"\nimport { banList, getDate, getDiffWeek, getWeekly } from \"../../model/const\";\nimport { Room } from \"../../model/enum\";\nimport { FrontHeaderTable } from \"../../model/table\";\nimport '../print_css/print.css'\nimport '../print_css/stroks.css'\nimport '../print_css/top.css'\nimport '../print_css/var.css'\nimport '../print_css/word.css'\nimport '../print_css/voca.css'\nimport { BackView } from \"./BackView\";\nimport { HeaderView } from \"./header\";\nimport { KinderPrintView } from \"./KinderPrintView\";\nimport { childWordWriteView, frontWriteView, getChildWriteCase } from \"./FrontPrintViewUtils\";\nexport const makeNextLineBracket = (str: string): JSX.Element => {\n    try {\n        const list = str.split(\"(\").map((el, i) => {\n            if (i == 1) return \"(\" + el\n            return el\n        })\n\n        return (\n            <>\n                <span className=\"sub-ch ch\">{list[0]}</span><br />\n                <span className=\"sub-kr kr\">{list[1]}</span>\n            </>\n        )\n    } catch (error) {\n        console.error(error);\n        return <div>정보가 없어요.</div>\n\n    }\n}\nconst EachOrderList = (weeks: number): number[] => [\n    (Room.KINDERGARTEN + weeks),\n    (Room.ELEMENTARY + weeks),\n    (Room.TEENAGER + weeks),\n    (Room.ADULT + weeks)\n]\nexport function WordViews(vocaArr: Array<Voca>): JSX.Element {\n    // var vocaCnt = 1\n\n    var vocaCnt\n    try {\n        vocaCnt = vocaArr.filter((v, i) => { return v.hanja != undefined }).length\n\n    } catch (error) {\n        return <div>정보 없음</div>\n    }\n    var view\n    if (vocaCnt == 1) {\n        view = (<div className=\"word1 hanja\">\n            <div className=\"grid-100 word-item ch\">{vocaArr[0].hanja}</div>\n            <div className=\"grid-101 word-item kr\">{vocaArr[0].mean}</div>\n        </div>)\n    } else if (vocaCnt == 2) {\n        let voca0Len = vocaArr[0].hanja.length\n        let voca1Len = vocaArr[1].hanja.length\n        view = (<div className=\"word2 hanja\">\n            <div className={voca0Len > 2 ? \"grid-100 word-item ch small-hanja\" : \"grid-100 word-item ch\"}>{vocaArr[0].hanja}</div>\n            <div className=\"grid-101 word-item kr\">{vocaArr[0].mean}</div>\n            <div className={voca1Len > 2 ? \"grid-102 word-item ch small-hanja\" : \"grid-102 word-item ch\"}>{vocaArr[1].hanja}</div>\n            <div className=\"grid-103 word-item kr\">{vocaArr[1].mean}</div>\n        </div>)\n    } else if (vocaCnt == 3) {\n        console.log(vocaArr);\n        let has2hanja0 = vocaArr[0].hanja.length\n        let has2hanja1 = vocaArr[1].hanja.length\n        let has2hanja2 = vocaArr[2].hanja.length\n\n        view = (\n            <div className=\"word3 hanja\">\n                <div className={has2hanja0 == 2 ? \"grid-100 word-item ch small-hanja\" : \"grid-100 word-item ch\"}>{vocaArr[0].hanja}</div>\n                <div className=\"grid-101 word-item kr\">{vocaArr[0].mean}</div>\n                <div className={has2hanja1 == 2 ? \"grid-102 word-item ch small-hanja\" : \"grid-102 word-item ch\"}>{vocaArr[1].hanja}</div>\n                <div className=\"grid-103 word-item kr\">{vocaArr[1].mean}</div>\n                <div className={has2hanja2 == 2 ? \"grid-104 word-item ch small-hanja\" : \"grid-104 word-item ch\"}>{vocaArr[2].hanja}</div>\n                <div className=\"grid-105 word-item kr\">{vocaArr[2].mean}</div>\n            </div>)\n    } else if (vocaCnt == 4) {\n        view = (<div className=\"word4 hanja\">\n            <div className=\"grid-100 word-item ch\">{vocaArr[0].hanja}</div>\n            <div className=\"grid-101 word-item kr\">{vocaArr[0].mean}</div>\n            <div className=\"grid-102 word-item ch\">{vocaArr[1].hanja}</div>\n            <div className=\"grid-103 word-item kr\">{vocaArr[1].mean}</div>\n            <div className=\"grid-104 word-item ch\">{vocaArr[2].hanja}</div>\n            <div className=\"grid-105 word-item kr\">{vocaArr[2].mean}</div>\n            <div className=\"grid-106 word-item ch\">{vocaArr[3].hanja}</div>\n            <div className=\"grid-107 word-item kr\">{vocaArr[3].mean}</div>\n        </div>)\n    } else {\n        view = (<div></div>)\n    }\n    return view\n}\nexport function StrokeView(_hanjaList: (FrontHanjaList | null)[]): JSX.Element {\n    let hanjaList = swap(Object.assign([], _hanjaList))\n    console.log(\"strokeView::\", hanjaList, _hanjaList);\n\n    return (\n        <div className=\"stroke-table\">\n            {\n\n                [0, 1, 2, 3].map((_, index) => {\n                    //한자 자리 배치도와주는 배열\n\n                    if (hanjaList[index] != null) {\n                        var el = hanjaList[index] as FrontHanjaList\n                        console.log(\"el >>\" + el.hanja + \", index:\" + index)\n\n                        const drawCnt = el.draw_list.length\n                        const realCnt = el.count\n                        return (\n                            <div className={\"stroke\" + index}>\n                                <div className=\"grid-hanja0 ch\">{el.hanja}<span className=\"total-stroke kr\">{realCnt}</span></div>\n                                <div className=\"grid-name0 kr\"><div className=\"hanja-name-stroke\">{el.name}</div></div>\n                                <div className=\"grid-sub0 kr\"><span className=\"sub-title\"></span>{makeNextLineBracket(el.sub)} </div>\n                                <div className=\"grid-s0-0\">{drawCnt > 0 && <img src={el.draw_list[0]} />}</div>\n                                <div className=\"grid-s0-1\">{drawCnt > 1 && <img src={el.draw_list[1]} />}</div>\n                                <div className=\"grid-s0-2\">{drawCnt > 2 && <img src={el.draw_list[2]} />}</div>\n                                <div className=\"grid-s0-3\">{drawCnt > 3 && <img src={el.draw_list[3]} />}</div>\n                                <div className=\"grid-s0-4\">{drawCnt > 4 && <img src={el.draw_list[4]} />}</div>\n                                <div className=\"grid-s0-5\">{drawCnt > 5 && <img src={el.draw_list[5]} />}</div>\n                                <div className=\"grid-s0-6\">{drawCnt > 6 && <img src={el.draw_list[6]} />}</div>\n                                <div className=\"grid-s0-7\">{drawCnt > 7 && <img src={el.draw_list[7]} />}</div>\n                                <div className=\"grid-s0-8\">{drawCnt > 8 && <img src={el.draw_list[8]} />}</div>\n                                <div className=\"grid-s0-9\">{drawCnt > 9 && <img src={el.draw_list[9]} />}</div>\n                                <div className=\"grid-s0-10\">{drawCnt > 10 && <img src={el.draw_list[10]} />}</div>\n                                <div className=\"grid-s0-11\">{drawCnt > 11 && <img src={el.draw_list[11]} />}</div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div className={\"stroke\" + index}>\n                                <div className=\"grid-hanja0\"></div>\n                                <div className=\"grid-name0\"></div>\n                                <div className=\"grid-sub0\"> </div>\n                                <div className=\"grid-s0-0\"></div>\n                                <div className=\"grid-s0-1\"></div>\n                                <div className=\"grid-s0-2\"></div>\n                                <div className=\"grid-s0-3\"></div>\n                                <div className=\"grid-s0-4\"></div>\n                                <div className=\"grid-s0-5\"></div>\n                                <div className=\"grid-s0-6\"></div>\n                                <div className=\"grid-s0-7\"></div>\n                                <div className=\"grid-s0-8\"></div>\n                                <div className=\"grid-s0-9\"></div>\n                                <div className=\"grid-s0-10\"></div>\n                                <div className=\"grid-s0-11\"></div>\n                            </div>\n                        )\n                    }\n\n                })\n            }\n\n        </div>\n    )\n}\nexport const PrintView = (contentDto: ContentsDto) => {\n    console.log(contentDto.yaer, contentDto.month, contentDto.week);\n\n    const targetDate = getDate(contentDto.yaer, contentDto.month, contentDto.week);\n\n    console.log('target!!', targetDate);\n\n    const diffWeek = getDiffWeek(targetDate);\n    const numList = EachOrderList(diffWeek)\n    const headerList: FrontHeaderTable[] = numList.map<FrontHeaderTable>((no, index) => {\n        return new FrontHeaderTable(no, targetDate, getWeekly(targetDate), banList[index])\n    })\n    console.log(\"headerList\", headerList);\n\n    const headerViews: JSX.Element[] = headerList.map<JSX.Element>((frontTable) => {\n        return <HeaderView no={frontTable.no} date={frontTable.date} weekly={frontTable.weekly} ban={frontTable.ban} dateString={frontTable.dateString} />;\n    })\n\n    interface AgeIndex {\n        age: Index\n    }\n\n    console.log(\"init front list\", contentDto.front_hanja_list);\n\n    let frontBigHanjaList = getFrontBigHanjaList(contentDto.voca_list, contentDto.front_hanja_list)\n    // let frontBigHanjaList = contentDto.front_hanja_list\n    let strokeHanjaList = swap(frontBigHanjaList)\n    // let strokeHanjaList = swap(frontBigHanjaList)\n    // let childWriteCase = getChildWriteCase(contentDto.voca_list)\n\n    const nineList: number[] = []\n    for (let index = 0; index < 9; index++) {\n        nineList.push(index);\n    }\n\n    // let swapHanjaList = (hanjaList)\n\n    let ageIndexList = [\n        Index.Kinder, Index.Child, Index.Youth, Index.Adult\n    ]\n    return (\n        <div>\n\n            {ageIndexList.map((index) => {\n                var view\n                if (index == Index.Kinder) {\n                    view =\n                        <div>\n                            <div className=\"a4\">\n                                <KinderPrintView\n                                    where={contentDto.yojeol.morning.where}\n                                    yojeol={contentDto.yojeol.morning.words}\n                                    order={headerList[0].no} dataString={headerList[0].dateString} isFront={true} />\n                            </div>\n                            <div className=\"a4\">\n                                <KinderPrintView\n                                    where={contentDto.yojeol.morning.where}\n                                    yojeol={contentDto.yojeol.morning.words}\n                                    order={headerList[0].no} dataString={headerList[0].dateString} isFront={false} />\n                            </div>\n                        </div>\n                } else {\n                    view = (\n                        <div>\n                            <div className=\"a4\">\n\n                                {headerViews[index]}\n                                {WordViews(contentDto.voca_list)}\n                                {index == Index.Child && childWordWriteView(contentDto.voca_list)}\n\n                                {StrokeView(strokeHanjaList)}\n                                {frontWriteView(index, frontBigHanjaList, contentDto.voca_list)}\n                            </div>\n                            <div className=\"a4\">\n                                <BackView main_words={contentDto.main_words}\n                                    questions={contentDto.questions}\n                                    yojeol={contentDto.yojeol}\n                                    back_hanja_list={contentDto.back_hanja_list}\n                                    week={contentDto.week}\n                                    month={contentDto.month}\n                                    yaer={contentDto.yaer} index={index} order={numList[index]} />\n                            </div>\n                        </div>\n                    )\n\n                }\n                return view\n            })}\n\n        </div>\n    )\n\n}\n\nfunction getEachHanjaIndexArr(voca_list: Voca[]): Array<Boolean> {\n    var boolArr = [true, true, true, true];\n    let totalVocaLen = voca_list.length\n    var secondVocaLen = 2\n    if (totalVocaLen == 1) {\n        let firstVocaLen = voca_list[0].hanja.length\n        switch (firstVocaLen) {\n            case 3:\n                return [true, true, true, false]\n            case 4:\n                return boolArr\n            default:\n                throw new Error(\"그렇게하지 말고, 좀 더 생각해봐. 너무 적다...\");\n\n        }\n    } else if (totalVocaLen == 2) {\n        let firstVocaLen = voca_list[0].hanja.length\n        secondVocaLen = voca_list[1].hanja.length\n        if (firstVocaLen == 1 && secondVocaLen == 1 && voca_list.length == 2) {\n            return [true, false, true, false]\n        } else if (firstVocaLen == 1 && secondVocaLen == 2) {\n            return [true, false, true, true]\n        } else if (firstVocaLen == 1 && secondVocaLen == 3) {\n            return boolArr\n        } else if (firstVocaLen == 2 && secondVocaLen == 2) {\n            return boolArr\n        } else if (firstVocaLen == 2 && secondVocaLen == 1) {\n            return [true, true, false, true]\n        } else if (firstVocaLen == 3 && secondVocaLen == 1) {\n            return boolArr\n        }\n    }\n\n\n\n    if (totalVocaLen == 2) {\n        secondVocaLen = voca_list[1].hanja.length\n    }\n    let firstVocaLen = voca_list[0].hanja.length\n    if (firstVocaLen == 2) return boolArr\n    if (firstVocaLen == 1 && totalVocaLen == 2) {\n        switch (secondVocaLen) {\n            case 1:\n                return [true, false, true, false]\n\n            case 2:\n                return [true, false, true, true]\n            case 3:\n                return boolArr\n            default:\n                break;\n        }\n    }\n    return boolArr\n\n\n}\nfunction getFrontBigHanjaList(voca_list: Voca[], front_hanja_list: FrontHanjaList[]): (FrontHanjaList | null)[] {\n    let writeCase = getChildWriteCase(voca_list);\n\n    let getBoolArr = getEachHanjaIndexArr(voca_list)\n    var index = 0\n    var list = getBoolArr.map((hasHanja, i) => {\n        if (hasHanja) {\n            return front_hanja_list[index++]\n        } else {\n            return null\n        }\n        // return front_hanja_list[index++]\n    })\n    if (front_hanja_list[0].hanja.length == 1) {\n\n    }\n\n    // let list = Object.assign([],front_hanja_list)\n    //swap\n    // var list = front_hanja_list\n    let temp = list[1]\n    list[1] = list[2]\n    list[2] = temp\n    return list\n    // return front_hanja_list\n}\n\nfunction swap(hanjaList: (FrontHanjaList | null)[]): (FrontHanjaList | null)[] {\n    var list = hanjaList\n    let temp = list[1]\n    list[1] = list[2]\n    list[2] = temp\n    return list\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport { getYears, nowAsNextWeek, nowYear, setNotFoundMessage } from \"./util/util\";\nimport { BrowserRouter, Link, Route, Router, useHistory } from \"react-router-dom\";\nimport { HeaderView } from \"./view/print/header\";\nimport SideBar from \"./view/SideBar\";\nimport { ContentsWrapper } from \"./view/Contents\";\nimport \"./App.css\"\n// import \"./view/print_css/font.scss\"\nimport { ContentsDto, YearJson } from \"./model/Api\";\nimport { AxiosResponse } from \"axios\";\nimport { getMonthsJson, getYearsJson } from \"./util/api_utils\";\nimport { PrintView, WordViews } from \"./view/print/PrintView\";\nimport { GenModal } from \"./view/Generator\";\nimport {  childWordWriteView, } from \"./view/print/FrontPrintViewUtils\";\ntype AppProps = {\n  link: string\n}\nexport const gitRoot = \"yc_hanja_page\"\nconst initMonthYear: string = \"/\" + nowYear + \"/\" + (nowAsNextWeek.getMonth() + 1)\n\n\nfunction App(linkState: AppProps) {\n  const frontList = getYears();\n  console.log(frontList);\n\n  useEffect(() => {\n    updateUrlPath(linkState.link)\n  }, [linkState.link])\n  let view: JSX.Element;\n  var notFountMessage: string | null = null;\n\n  const [url_path, updateUrlPath] = useState<string>(initMonthYear);\n  const [contentsDto, updateContentsDto] = useState<ContentsDto[] | null>(null);\n  const [notFound, updateNotFound] = useState<string | null>(null);\n  const [printViewContentsDto, setPrintViewContentDto] = useState<ContentsDto | null>(null);\n  const [tempPrintViewContentsDto, setTempPrintViewContentDto] = useState<ContentsDto | null>(null);\n\n  const [tempYearMonth, updateTempYearMonth] = useState<string>(\"\");\n  var pathname: string\n  //init\n  if (window.location.pathname == \"/\" || window.location.pathname == \"/\" + gitRoot + \"/\") {\n    pathname = \"/\" + gitRoot + initMonthYear\n  } else {\n    pathname = window.location.pathname\n  }\n\n  console.log(\"now week\", nowAsNextWeek);\n\n  //  = window.location.pathname;\n  console.log('pathname', pathname);\n\n  var [year, month, week]: string[] = pathname.split(\"/\").filter(v => v != \"\" && !v.includes(gitRoot));\n  if (year == undefined) {\n    [year, month] = initMonthYear.split(\"/\").filter(v => v != \"\")\n  }\n  console.log('filtered >>>> ', year, month, week);\n  if (!week) {\n    if (printViewContentsDto != null)\n      setPrintViewContentDto(null);\n  }\n\n  const [monthFiles, updateMonthFiles] = useState<string[] | null>(null);\n  useEffect(() => {\n    getYearsJson(year).then((yaerJson: YearJson | null) => {\n      console.log('getYearsJson>>>>>', yaerJson);\n\n      if (!yaerJson) return (<div>Not found</div>);\n      updateMonthFiles(yaerJson.month_files);\n    })\n  }, [pathname]);\n\n  useEffect(() => {\n    if (!week) {\n      console.log(\"not week\");\n\n      setPrintViewContentDto(null);\n    }\n    else {\n      console.log(\"yes week\", tempPrintViewContentsDto, \"&\");\n      setPrintViewContentDto(tempPrintViewContentsDto);\n    }\n  }, [week])\n\n  useEffect(() => {\n    console.log('monthFiles', monthFiles);\n    console.log(window.location.pathname == url_path);\n\n    if (!monthFiles) return;\n\n    const monthIndex = parseInt(month) - 1;\n    const path = monthFiles[monthIndex];\n\n    console.log('path>>>>>>>', path);\n    if (path) {\n\n      getMonthsJson(String(year), path).then((contentsDtos: ContentsDto[] | null) => {\n        if (!contentsDtos) {\n          updateNotFound(setNotFoundMessage(year, month, week));\n        } else {\n          console.log('contentdto array >>', contentsDtos);\n\n          updateContentsDto(contentsDtos);\n          updateUrlPath(window.location.pathname);\n          updateNotFound(null);\n        }\n      }).catch(err => {\n        updateNotFound(setNotFoundMessage(year, month, week));\n      })\n    } else {\n      updateNotFound(setNotFoundMessage(year, month, week))\n    }\n  }, [monthFiles]);\n\n  const handleUpdate = (yearMonth: string) => {\n    updateUrlPath(yearMonth);\n    updateTempYearMonth(yearMonth);\n    console.log(\"App > update\");\n  }\n\n  const handleContentDto = (dto: ContentsDto | null) => {\n    setPrintViewContentDto(dto);\n    setTempPrintViewContentDto(dto);\n  }\n\n  console.log(\"hostname\", window.location.hostname);\n  let isDebug = window.location.hostname == \"localhost\"\n\n\n  if (printViewContentsDto == null) {\n    view = (\n      <>\n\n        <SideBar years={getYears()} stateHandler={handleUpdate} />\n        <ContentsWrapper yearMonth={url_path} handleContentDto={handleContentDto} notFound={notFound} year={year} month={month} week={week} contentsList={contentsDto} />\n      </>\n    )\n  } else {\n    const content = contentsDto![parseInt(week) - 1]\n    console.log(\"content:\", content);\n\n    try {\n\n      view = (\n        <>\n        {/* front_hanja_list가 배열 순서대로 옴 */}\n          <PrintView front_hanja_list={content.front_hanja_list}\n            main_words={content.main_words}\n            questions={content.questions}\n            yojeol={content.yojeol}\n            back_hanja_list={content.back_hanja_list}\n            week={content.week}\n            handleContentDto={content.handleContentDto}\n            month={parseInt(month)}\n            yaer={parseInt(year)} voca_list={content.voca_list} />\n        </>\n      )\n      return view;\n    } catch (err) {\n      view = React.createElement(\"div\", null, \"hello\")\n    }\n  }\n  let test0 = [{ \"hanja\": \"分亞\", \"mean\": \"나누다\" }, { \"hanja\": \"節氣\", \"mean\": \"한 해 동안을 24로 가른 철,한 해 동안을 24로 가른 철,\" }]\n  let test1 = [{ \"hanja\": \"分\", \"mean\": \"나누다\" }, { \"hanja\": \"節\", \"mean\": \"마디\" }, { \"hanja\": \"節氣\", \"mean\": \"한 해 동안을 24로 가른 철,한 해 동안을 24로 가른 철,\" }]\n  let test11 = [{ \"hanja\": \"節氣\", \"mean\": \"한 해 동안을 24로 가른 철\" }, { \"hanja\": \"分\", \"mean\": \"나누다\" }, { \"hanja\": \"節\", \"mean\": \"마디\" }]\n  let test2 = [{ \"hanja\": \"分\", \"mean\": \"나누다나누다나누다나누다\" }, { \"hanja\": \"節\", \"mean\": \"마디\" }, { \"hanja\": \"氣\", \"mean\": \"기운\" }, { \"hanja\": \"阿\", \"mean\": \"언덕\" }]\n  let test3 = [{ \"hanja\": \"分分分分\", \"mean\": \"나누다나누다나누다나누다\" }]\n  let test4 = [{ \"hanja\": \"分分分\", \"mean\": \"나누다\" }, { \"hanja\": \"分\", \"mean\": \"나누다\" }]\n  let test5 = [{ \"hanja\": \"分\", \"mean\": \"나누다\" },{ \"hanja\": \"分分分\", \"mean\": \"나누다\" }]\n  return (\n    <div className=\"App\">\n      {/* <GenModal/> */}\n      {/* {isDebug ? childWordWriteView(test5) : {}} */}\n      {/* {isDebug ? childWordWriteView(test0) : {}}\n      {isDebug ? childWordWriteView(test4) : {}}\n      {isDebug ? childWordWriteView(test3) : {}}\n      {isDebug ? childWordWriteView(test2) : {}}\n      {isDebug ? childWordWriteView(test11) : {}}\n      {isDebug ? childWordWriteView(test1) : {}}\n      {isDebug ? WordViews(test0) : {}}\n      {isDebug ? WordViews(test1) : {}}\n      {isDebug ? WordViews(test11) : {}}\n      {isDebug ? WordViews(test2) : {}}\n      {isDebug ? WordViews(test3) : {}}\n      {isDebug ? WordViews(test4) : {}} */}\n      {/* {childWordWriteViewTable(test2)}\n      {childWordWriteViewTable(test3)}\n      {childWordWriteViewTable(test4)} */}\n      {view}\n    </div >\n  );\n}\n\nexport default App;\n","import axios, { AxiosResponse } from \"axios\";\nimport { ContentsDto, YearJson } from \"../model/Api\";\n\nexport function getYearsJson(year: string): Promise<YearJson | null> {\n    const fetch =\n        axios(\n            {\n                method: \"get\",\n                baseURL: \"https://raw.githubusercontent.com/yegyu/yc_hanja/main/year/\",\n                url: `${year}.json`,\n            }\n        ).then((res: AxiosResponse<YearJson>) => {\n            const yaerJson: YearJson = res.data as YearJson\n            return yaerJson\n        }).catch((error) => {\n            console.error('getYearsJson', error);\n            return null;\n        })\n    return fetch;\n}\nexport function getMonthsJson(year: string, path: string): Promise<ContentsDto[] | null> {\n    return axios(\n        {\n            method: \"get\",\n            baseURL: \"https://raw.githubusercontent.com/yegyu/yc_hanja/main/\",\n            url: year + \"/\" + path,\n        }\n    ).then((res: AxiosResponse<ContentsDto[]>) => {\n        return res.data\n    }).catch((error) => {\n        console.error(error);\n        return null;\n    });\n}","import { useEffect, useState } from \"react\"\nimport { useHistory } from \"react-router\"\nimport App  from \"./App\";\n\nexport const Root = () =>{\n    const history = useHistory();\n    const [linkState,setLinkState] = useState(\"\")\n    useEffect(() => {\n        return history.listen((location) => {\n            console.log('root link',location.pathname);\n            setLinkState(location.pathname)\n            \n        })\n    }, [history])\n\n    return <App link={linkState} />\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Root } from './Root';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Root />\n  </BrowserRouter>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}